{
  "address": "0xd87d3AAc191AD739F5f38979b0213baffA36A890",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "_storageT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_allyFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startReferrerFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_openFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetVolumeDai",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ally",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "volumeDai",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountValueDai",
          "type": "uint256"
        }
      ],
      "name": "AllyRewardDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ally",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "AllyRewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ally",
          "type": "address"
        }
      ],
      "name": "AllyUnwhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "ally",
          "type": "address"
        }
      ],
      "name": "AllyWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "ReferrerRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "volumeDai",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountValueDai",
          "type": "uint256"
        }
      ],
      "name": "ReferrerRewardDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "ReferrerRewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "ReferrerUnwhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "ally",
          "type": "address"
        }
      ],
      "name": "ReferrerWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdatedAllyFeeP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdatedOpenFeeP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdatedStartReferrerFeeP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "UpdatedTargetVolumeDai",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allyDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "volumeReferredDai",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pendingRewardsToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalRewardsToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalRewardsValueDai",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allyFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAllyRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReferrerRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "volumeDai",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pairOpenFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenPriceDai",
          "type": "uint256"
        }
      ],
      "name": "distributePotentialReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getPercentOfOpenFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "volumeReferredDai",
          "type": "uint256"
        }
      ],
      "name": "getPercentOfOpenFeeP_calc",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "resultP",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairOpenFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "volumeReferredDai",
          "type": "uint256"
        }
      ],
      "name": "getReferrerFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ally",
          "type": "address"
        }
      ],
      "name": "getReferrersReferred",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        }
      ],
      "name": "getTraderReferrer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referred",
          "type": "address"
        }
      ],
      "name": "getTradersReferred",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerByTrader",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "ally",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "volumeReferredDai",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pendingRewardsToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalRewardsToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalRewardsValueDai",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "registerPotentialReferrer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startReferrerFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storageT",
      "outputs": [
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetVolumeDai",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ally",
          "type": "address"
        }
      ],
      "name": "unwhitelistAlly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "name": "unwhitelistReferrer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateAllyFeeP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateOpenFeeP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateStartReferrerFeeP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateTargetVolumeDai",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ally",
          "type": "address"
        }
      ],
      "name": "whitelistAlly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ally",
          "type": "address"
        }
      ],
      "name": "whitelistReferrer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8bfb3723f2f8cca4db5df04004dd10505b61f43a8e41bccd6eb37c6079c56e8f",
  "receipt": {
    "to": null,
    "from": "0xE5f1Eb09e0d23c453FD787b21E6d082CDEE6b7B3",
    "contractAddress": "0xd87d3AAc191AD739F5f38979b0213baffA36A890",
    "transactionIndex": 2,
    "gasUsed": "1830911",
    "logsBloom": "0x
    "blockHash": "0xd88834be0b061795cdc186fa1c2a6b42b6f6a207ad41286b973cd7e85c320717",
    "transactionHash": "0x8bfb3723f2f8cca4db5df04004dd10505b61f43a8e41bccd6eb37c6079c56e8f",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 44967477,
        "transactionHash": "0x8bfb3723f2f8cca4db5df04004dd10505b61f43a8e41bccd6eb37c6079c56e8f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e5f1eb09e0d23c453fd787b21e6d082cdee6b7b3",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000126472772502e0000000000000000000000000000000000000000000000000d7598a02eb3d95390000000000000000000000000000000000000000000013f4f34a34dd31797a2a000000000000000000000000000000000000000000000000d7472590741892590000000000000000000000000000000000000000000013f4f35c994fa89e7d0a",
        "logIndex": 4,
        "blockHash": "0xd88834be0b061795cdc186fa1c2a6b42b6f6a207ad41286b973cd7e85c320717"
      }
    ],
    "blockNumber": 44967477,
    "cumulativeGasUsed": "2060333",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1d31605A708A5FBAB9F703825B7cB9225FD9A7D3",
    "10",
    "33",
    "50",
    "10000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "f7a9b91dc44ee5e79c1a5d5aff87db1f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"_storageT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_allyFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startReferrerFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetVolumeDai\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"volumeDai\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountValueDai\",\"type\":\"uint256\"}],\"name\":\"AllyRewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"}],\"name\":\"AllyRewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"}],\"name\":\"AllyUnwhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"}],\"name\":\"AllyWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"ReferrerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"volumeDai\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountValueDai\",\"type\":\"uint256\"}],\"name\":\"ReferrerRewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"}],\"name\":\"ReferrerRewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"ReferrerUnwhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"}],\"name\":\"ReferrerWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UpdatedAllyFeeP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UpdatedOpenFeeP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UpdatedStartReferrerFeeP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UpdatedTargetVolumeDai\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allyDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volumeReferredDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewardsToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardsToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardsValueDai\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allyFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllyRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReferrerRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"volumeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairOpenFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceDai\",\"type\":\"uint256\"}],\"name\":\"distributePotentialReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getPercentOfOpenFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"volumeReferredDai\",\"type\":\"uint256\"}],\"name\":\"getPercentOfOpenFeeP_calc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"resultP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairOpenFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volumeReferredDai\",\"type\":\"uint256\"}],\"name\":\"getReferrerFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"}],\"name\":\"getReferrersReferred\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"}],\"name\":\"getTraderReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referred\",\"type\":\"address\"}],\"name\":\"getTradersReferred\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerByTrader\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"volumeReferredDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewardsToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardsToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardsValueDai\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"registerPotentialReferrer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startReferrerFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageT\",\"outputs\":[{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetVolumeDai\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"}],\"name\":\"unwhitelistAlly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"unwhitelistReferrer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateAllyFeeP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateOpenFeeP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateStartReferrerFeeP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateTargetVolumeDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"}],\"name\":\"whitelistAlly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ally\",\"type\":\"address\"}],\"name\":\"whitelistReferrer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/GNSReferralsV6_2.sol\":\"GNSReferralsV6_2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GNSReferralsV6_2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nimport \\\"../interfaces/StorageInterfaceV5.sol\\\";\\n\\ncontract GNSReferralsV6_2 {\\n\\n    // CONSTANTS\\n    uint constant PRECISION = 1e10;\\n    StorageInterfaceV5 public immutable storageT;\\n\\n    // ADJUSTABLE PARAMETERS\\n    uint public allyFeeP;           // % (of referrer fees going to allies, eg. 10)\\n    uint public startReferrerFeeP;  // % (of referrer fee when 0 volume referred, eg. 75)\\n    uint public openFeeP;           // % (of opening fee used for referral system, eg. 33)\\n    uint public targetVolumeDai;    // DAI (to reach maximum referral system fee, eg. 1e8)\\n\\n    // CUSTOM TYPES\\n    struct AllyDetails{\\n        address[] referrersReferred;\\n        uint volumeReferredDai;    // 1e18\\n        uint pendingRewardsToken;  // 1e18\\n        uint totalRewardsToken;    // 1e18\\n        uint totalRewardsValueDai; // 1e18\\n        bool active;\\n    }\\n\\n    struct ReferrerDetails{\\n        address ally;\\n        address[] tradersReferred;\\n        uint volumeReferredDai;    // 1e18\\n        uint pendingRewardsToken;  // 1e18\\n        uint totalRewardsToken;    // 1e18\\n        uint totalRewardsValueDai; // 1e18\\n        bool active;\\n    }\\n\\n    // STATE (MAPPINGS)\\n    mapping(address => AllyDetails) public allyDetails;\\n    mapping(address => ReferrerDetails) public referrerDetails;\\n\\n    mapping(address => address) public referrerByTrader;\\n\\n    // EVENTS\\n    event UpdatedAllyFeeP(uint value);\\n    event UpdatedStartReferrerFeeP(uint value);\\n    event UpdatedOpenFeeP(uint value);\\n    event UpdatedTargetVolumeDai(uint value);\\n\\n    event AllyWhitelisted(address indexed ally);\\n    event AllyUnwhitelisted(address indexed ally);\\n\\n    event ReferrerWhitelisted(\\n        address indexed referrer,\\n        address indexed ally\\n    );\\n    event ReferrerUnwhitelisted(address indexed referrer);\\n    event ReferrerRegistered(\\n        address indexed trader,\\n        address indexed referrer\\n    );\\n\\n    event AllyRewardDistributed(\\n        address indexed ally,\\n        address indexed trader,\\n        uint volumeDai,\\n        uint amountToken,\\n        uint amountValueDai\\n    );\\n    event ReferrerRewardDistributed(\\n        address indexed referrer,\\n        address indexed trader,\\n        uint volumeDai,\\n        uint amountToken,\\n        uint amountValueDai\\n    );\\n\\n    event AllyRewardsClaimed(\\n        address indexed ally,\\n        uint amountToken\\n    );\\n    event ReferrerRewardsClaimed(\\n        address indexed referrer,\\n        uint amountToken\\n    );\\n\\n    constructor(\\n        StorageInterfaceV5 _storageT,\\n        uint _allyFeeP,\\n        uint _startReferrerFeeP,\\n        uint _openFeeP,\\n        uint _targetVolumeDai\\n    ){\\n        require(address(_storageT) != address(0)\\n            && _allyFeeP <= 50\\n            && _startReferrerFeeP <= 100\\n            && _openFeeP <= 50\\n            && _targetVolumeDai > 0, \\\"WRONG_PARAMS\\\");\\n\\n        storageT = _storageT;\\n\\n        allyFeeP = _allyFeeP;\\n        startReferrerFeeP = _startReferrerFeeP;\\n        openFeeP = _openFeeP;\\n        targetVolumeDai = _targetVolumeDai;\\n    }\\n\\n    // MODIFIERS\\n    modifier onlyGov(){\\n        require(msg.sender == storageT.gov(), \\\"GOV_ONLY\\\");\\n        _;\\n    }\\n    modifier onlyTrading(){\\n        require(msg.sender == storageT.trading(), \\\"TRADING_ONLY\\\");\\n        _;\\n    }\\n    modifier onlyCallbacks(){\\n        require(msg.sender == storageT.callbacks(), \\\"CALLBACKS_ONLY\\\");\\n        _;\\n    }\\n\\n    // MANAGE PARAMETERS\\n    function updateAllyFeeP(uint value) external onlyGov{\\n        require(value <= 50, \\\"VALUE_ABOVE_50\\\");\\n\\n        allyFeeP = value;\\n        \\n        emit UpdatedAllyFeeP(value);\\n    }\\n    function updateStartReferrerFeeP(uint value) external onlyGov{\\n        require(value <= 100, \\\"VALUE_ABOVE_100\\\");\\n\\n        startReferrerFeeP = value;\\n\\n        emit UpdatedStartReferrerFeeP(value);\\n    }\\n    function updateOpenFeeP(uint value) external onlyGov{\\n        require(value <= 50, \\\"VALUE_ABOVE_50\\\");\\n\\n        openFeeP = value;\\n\\n        emit UpdatedOpenFeeP(value);\\n    }\\n    function updateTargetVolumeDai(uint value) external onlyGov{\\n        require(value > 0, \\\"VALUE_0\\\");\\n\\n        targetVolumeDai = value;\\n        \\n        emit UpdatedTargetVolumeDai(value);\\n    }\\n\\n    // MANAGE ALLIES\\n    function whitelistAlly(address ally) external onlyGov{\\n        require(ally != address(0), \\\"ADDRESS_0\\\");\\n\\n        AllyDetails storage a = allyDetails[ally];\\n        require(!a.active, \\\"ALLY_ALREADY_ACTIVE\\\");\\n\\n        a.active = true;\\n\\n        emit AllyWhitelisted(ally);\\n    }\\n    function unwhitelistAlly(address ally) external onlyGov{\\n        AllyDetails storage a = allyDetails[ally];\\n        require(a.active, \\\"ALREADY_UNACTIVE\\\");\\n\\n        a.active = false;\\n\\n        emit AllyUnwhitelisted(ally);\\n    }\\n\\n    // MANAGE REFERRERS\\n    function whitelistReferrer(\\n        address referrer,\\n        address ally\\n    ) external onlyGov{\\n        \\n        require(referrer != address(0), \\\"ADDRESS_0\\\");\\n\\n        ReferrerDetails storage r = referrerDetails[referrer];      \\n        require(!r.active, \\\"REFERRER_ALREADY_ACTIVE\\\");\\n\\n        r.active = true;\\n        \\n        if(ally != address(0)){\\n            AllyDetails storage a = allyDetails[ally];\\n            require(a.active, \\\"ALLY_NOT_ACTIVE\\\");\\n\\n            r.ally = ally;\\n            a.referrersReferred.push(referrer);\\n        }\\n\\n        emit ReferrerWhitelisted(referrer, ally);\\n    }\\n    function unwhitelistReferrer(address referrer) external onlyGov{\\n        ReferrerDetails storage r = referrerDetails[referrer];\\n        require(r.active, \\\"ALREADY_UNACTIVE\\\");\\n\\n        r.active = false;\\n\\n        emit ReferrerUnwhitelisted(referrer);\\n    }\\n\\n    function registerPotentialReferrer(\\n        address trader,\\n        address referrer\\n    ) external onlyTrading{\\n\\n        ReferrerDetails storage r = referrerDetails[referrer];\\n\\n        if(referrerByTrader[trader] != address(0)\\n        || referrer == address(0)\\n        || !r.active){\\n            return;\\n        }\\n\\n        referrerByTrader[trader] = referrer;\\n        r.tradersReferred.push(trader);\\n\\n        emit ReferrerRegistered(trader, referrer);\\n    }\\n\\n    // REWARDS DISTRIBUTION\\n    function distributePotentialReward(\\n        address trader,\\n        uint volumeDai,\\n        uint pairOpenFeeP,\\n        uint tokenPriceDai\\n    ) external onlyCallbacks returns(uint){\\n\\n        address referrer = referrerByTrader[trader];\\n        ReferrerDetails storage r = referrerDetails[referrer];\\n\\n        if(!r.active){\\n            return 0;\\n        }\\n\\n        uint referrerRewardValueDai = volumeDai * getReferrerFeeP(\\n            pairOpenFeeP,\\n            r.volumeReferredDai\\n        ) / PRECISION / 100;\\n\\n        uint referrerRewardToken = referrerRewardValueDai * PRECISION / tokenPriceDai;\\n\\n        storageT.handleTokens(address(this), referrerRewardToken, true);\\n\\n        AllyDetails storage a = allyDetails[r.ally];\\n        \\n        uint allyRewardValueDai;\\n        uint allyRewardToken;\\n\\n        if(a.active){\\n            allyRewardValueDai = referrerRewardValueDai * allyFeeP / 100;\\n            allyRewardToken = referrerRewardToken * allyFeeP / 100;\\n\\n            a.volumeReferredDai += volumeDai;\\n            a.pendingRewardsToken += allyRewardToken;\\n            a.totalRewardsToken += allyRewardToken;\\n            a.totalRewardsValueDai += allyRewardValueDai;\\n\\n            referrerRewardValueDai -= allyRewardValueDai;\\n            referrerRewardToken -= allyRewardToken;\\n\\n            emit AllyRewardDistributed(\\n                r.ally,\\n                trader,\\n                volumeDai,\\n                allyRewardToken,\\n                allyRewardValueDai\\n            );\\n        }\\n\\n        r.volumeReferredDai += volumeDai;\\n        r.pendingRewardsToken += referrerRewardToken;\\n        r.totalRewardsToken += referrerRewardToken;\\n        r.totalRewardsValueDai += referrerRewardValueDai;\\n\\n        emit ReferrerRewardDistributed(\\n            referrer,\\n            trader,\\n            volumeDai,\\n            referrerRewardToken,\\n            referrerRewardValueDai\\n        );\\n\\n        return referrerRewardValueDai + allyRewardValueDai;\\n    }\\n\\n    // REWARDS CLAIMING\\n    function claimAllyRewards() external{\\n        AllyDetails storage a = allyDetails[msg.sender];\\n        uint rewardsToken = a.pendingRewardsToken;\\n        \\n        require(rewardsToken > 0, \\\"NO_PENDING_REWARDS\\\");\\n\\n        a.pendingRewardsToken = 0;\\n        storageT.token().transfer(msg.sender, rewardsToken);\\n\\n        emit AllyRewardsClaimed(msg.sender, rewardsToken);\\n    }\\n    function claimReferrerRewards() external{\\n        ReferrerDetails storage r = referrerDetails[msg.sender];\\n        uint rewardsToken = r.pendingRewardsToken;\\n        \\n        require(rewardsToken > 0, \\\"NO_PENDING_REWARDS\\\");\\n\\n        r.pendingRewardsToken = 0;\\n        storageT.token().transfer(msg.sender, rewardsToken);\\n\\n        emit ReferrerRewardsClaimed(msg.sender, rewardsToken);\\n    }\\n\\n    // VIEW FUNCTIONS\\n    function getReferrerFeeP(\\n        uint pairOpenFeeP,\\n        uint volumeReferredDai\\n    ) public view returns(uint){\\n\\n        uint maxReferrerFeeP = pairOpenFeeP * 2 * openFeeP / 100;\\n        uint minFeeP = maxReferrerFeeP * startReferrerFeeP / 100;\\n\\n        uint feeP = minFeeP + (maxReferrerFeeP - minFeeP)\\n            * volumeReferredDai / 1e18 / targetVolumeDai;\\n\\n        return feeP > maxReferrerFeeP ? maxReferrerFeeP : feeP;\\n    }\\n\\n    function getPercentOfOpenFeeP(\\n        address trader\\n    ) external view returns(uint){\\n        return getPercentOfOpenFeeP_calc(referrerDetails[referrerByTrader[trader]].volumeReferredDai);\\n    }\\n\\n    function getPercentOfOpenFeeP_calc(\\n        uint volumeReferredDai\\n    ) public view returns(uint resultP){\\n        resultP = (openFeeP * (\\n            startReferrerFeeP * PRECISION +\\n            volumeReferredDai * PRECISION * (100 - startReferrerFeeP) / 1e18 / targetVolumeDai)\\n        ) / 100;\\n\\n        resultP = resultP > openFeeP * PRECISION ?\\n            openFeeP * PRECISION :\\n            resultP;\\n    }\\n\\n    function getTraderReferrer(\\n        address trader\\n    ) external view returns(address){\\n        address referrer = referrerByTrader[trader];\\n\\n        return referrerDetails[referrer].active ? referrer : address(0);\\n    }\\n    function getReferrersReferred(\\n        address ally\\n    ) external view returns (address[] memory){\\n        return allyDetails[ally].referrersReferred;\\n    }\\n    function getTradersReferred(\\n        address referred\\n    ) external view returns (address[] memory){\\n        return referrerDetails[referred].tradersReferred;\\n    }\\n}\",\"keccak256\":\"0x18d10843aafac8c2a49dc0cea666e9b80dcd3e6c5e3a383f7731f02f9ba6a25a\",\"license\":\"MIT\"},\"contracts/interfaces/ChainlinkFeedInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\ninterface ChainlinkFeedInterfaceV5{\\n    function latestRoundData() external view returns (uint80,int,uint,uint,uint80);\\n}\",\"keccak256\":\"0x4f39b41b3bdadfb7233fac30c60cedfd20d534ba536c0b016818dd01b47728b1\",\"license\":\"MIT\"},\"contracts/interfaces/IGToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\npragma abicoder v2;\\n\\ninterface IGToken {\\n    function manager() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function currentEpoch() external view returns (uint);\\n\\n    function currentEpochStart() external view returns (uint);\\n\\n    function currentEpochPositiveOpenPnl() external view returns (uint);\\n\\n    function updateAccPnlPerTokenUsed(uint prevPositiveOpenPnl, uint newPositiveOpenPnl) external returns (uint);\\n\\n    struct LockedDeposit {\\n        address owner;\\n        uint shares; // 1e18\\n        uint assetsDeposited; // 1e18\\n        uint assetsDiscount; // 1e18\\n        uint atTimestamp; // timestamp\\n        uint lockDuration; // timestamp\\n    }\\n\\n    function getLockedDeposit(uint depositId) external view returns (LockedDeposit memory);\\n\\n    function sendAssets(uint assets, address receiver) external;\\n\\n    function receiveAssets(uint assets, address user) external;\\n\\n    function distributeReward(uint assets) external;\\n\\n    function currentBalanceDai() external view returns (uint);\\n\\n    function tvl() external view returns (uint);\\n\\n    function marketCap() external view returns (uint);\\n\\n    function getPendingAccBlockWeightedMarketCap(uint currentBlock) external view returns (uint);\\n}\",\"keccak256\":\"0xe1c4eac213e8cc146ef165a92ff5b652c250d2340d4954b7647eed73e601757f\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\ninterface NftInterfaceV5{\\n    function balanceOf(address) external view returns (uint);\\n    function ownerOf(uint) external view returns (address);\\n    function transferFrom(address, address, uint) external;\\n    function tokenOfOwnerByIndex(address, uint) external view returns(uint);\\n}\",\"keccak256\":\"0x1aba6c110d3893750103e30bd9556f785887576264ba70aa2c4f719eda7de3c4\",\"license\":\"MIT\"},\"contracts/interfaces/PairsStorageInterfaceV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\ninterface PairsStorageInterfaceV6{\\n    enum FeedCalculation { DEFAULT, INVERT, COMBINE }    // FEED 1, 1 / (FEED 1), (FEED 1)/(FEED 2)\\n    struct Feed{ address feed1; address feed2; FeedCalculation feedCalculation; uint maxDeviationP; } // PRECISION (%)\\n    function incrementCurrentOrderId() external returns(uint);\\n    function updateGroupCollateral(uint, uint, bool, bool) external;\\n    function pairJob(uint) external returns(string memory, string memory, bytes32, uint);\\n    function pairFeed(uint) external view returns(Feed memory);\\n    function pairSpreadP(uint) external view returns(uint);\\n    function pairMinLeverage(uint) external view returns(uint);\\n    function pairMaxLeverage(uint) external view returns(uint);\\n    function groupMaxCollateral(uint) external view returns(uint);\\n    function groupCollateral(uint, bool) external view returns(uint);\\n    function guaranteedSlEnabled(uint) external view returns(bool);\\n    function pairOpenFeeP(uint) external view returns(uint);\\n    function pairCloseFeeP(uint) external view returns(uint);\\n    function pairOracleFeeP(uint) external view returns(uint);\\n    function pairNftLimitOrderFeeP(uint) external view returns(uint);\\n    function pairReferralFeeP(uint) external view returns(uint);\\n    function pairMinLevPosDai(uint) external view returns(uint);\\n}\\n\",\"keccak256\":\"0xa72155fc2e8e0e6963c67710b42e30d503a3b2b6611bddbadc55919f9f7bc68e\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"./TokenInterfaceV5.sol\\\";\\nimport \\\"./NftInterfaceV5.sol\\\";\\nimport \\\"./IGToken.sol\\\";\\nimport \\\"./PairsStorageInterfaceV6.sol\\\";\\nimport \\\"./ChainlinkFeedInterfaceV5.sol\\\";\\n\\npragma solidity 0.8.7;\\npragma abicoder v2;\\n\\ninterface PoolInterfaceV5 {\\n    function increaseAccTokensPerLp(uint) external;\\n}\\n\\ninterface PausableInterfaceV5 {\\n    function isPaused() external view returns (bool);\\n}\\n\\ninterface StorageInterfaceV5 {\\n    enum LimitOrder {\\n        TP,\\n        SL,\\n        LIQ,\\n        OPEN\\n    }\\n    struct Trade {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken; // 1e18\\n        uint positionSizeDai; // 1e18\\n        uint openPrice; // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION\\n        uint sl; // PRECISION\\n    }\\n    struct TradeInfo {\\n        uint tokenId;\\n        uint tokenPriceDai; // PRECISION\\n        uint openInterestDai; // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize; // 1e18 (DAI or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION (%)\\n        uint sl; // PRECISION (%)\\n        uint minPrice; // PRECISION\\n        uint maxPrice; // PRECISION\\n        uint block;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingMarketOrder {\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice; // PRECISION\\n        uint slippageP; // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingNftOrder {\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n\\n    function PRECISION() external pure returns (uint);\\n\\n    function gov() external view returns (address);\\n\\n    function dev() external view returns (address);\\n\\n    function dai() external view returns (TokenInterfaceV5);\\n\\n    function token() external view returns (TokenInterfaceV5);\\n\\n    function linkErc677() external view returns (TokenInterfaceV5);\\n\\n    function priceAggregator() external view returns (AggregatorInterfaceV6_4);\\n\\n    function vault() external view returns (IGToken);\\n\\n    function trading() external view returns (address);\\n\\n    function callbacks() external view returns (address);\\n\\n    function handleTokens(address, uint, bool) external;\\n\\n    function transferDai(address, address, uint) external;\\n\\n    function transferLinkToAggregator(address, uint, uint) external;\\n\\n    function unregisterTrade(address, uint, uint) external;\\n\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n\\n    function hasOpenLimitOrder(address, uint, uint) external view returns (bool);\\n\\n    function storePendingMarketOrder(PendingMarketOrder memory, uint, bool) external;\\n\\n    function openTrades(address, uint, uint) external view returns (Trade memory);\\n\\n    function openTradesInfo(address, uint, uint) external view returns (TradeInfo memory);\\n\\n    function updateSl(address, uint, uint, uint) external;\\n\\n    function updateTp(address, uint, uint, uint) external;\\n\\n    function getOpenLimitOrder(address, uint, uint) external view returns (OpenLimitOrder memory);\\n\\n    function spreadReductionsP(uint) external view returns (uint);\\n\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n\\n    function reqID_pendingMarketOrder(uint) external view returns (PendingMarketOrder memory);\\n\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n\\n    function firstEmptyTradeIndex(address, uint) external view returns (uint);\\n\\n    function firstEmptyOpenLimitIndex(address, uint) external view returns (uint);\\n\\n    function increaseNftRewards(uint, uint) external;\\n\\n    function nftSuccessTimelock() external view returns (uint);\\n\\n    function reqID_pendingNftOrder(uint) external view returns (PendingNftOrder memory);\\n\\n    function updateTrade(Trade memory) external;\\n\\n    function nftLastSuccess(uint) external view returns (uint);\\n\\n    function unregisterPendingNftOrder(uint) external;\\n\\n    function handleDevGovFees(uint, uint, bool, bool) external returns (uint);\\n\\n    function distributeLpRewards(uint) external;\\n\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n\\n    function openLimitOrdersCount(address, uint) external view returns (uint);\\n\\n    function openTradesCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketOpenCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketCloseCount(address, uint) external view returns (uint);\\n\\n    function maxTradesPerPair() external view returns (uint);\\n\\n    function pendingOrderIdsCount(address) external view returns (uint);\\n\\n    function maxPendingMarketOrders() external view returns (uint);\\n\\n    function openInterestDai(uint, uint) external view returns (uint);\\n\\n    function getPendingOrderIds(address) external view returns (uint[] memory);\\n\\n    function nfts(uint) external view returns (NftInterfaceV5);\\n\\n    function fakeBlockNumber() external view returns (uint); // Testing\\n}\\n\\ninterface IStateCopyUtils {\\n    function getOpenLimitOrders() external view returns (StorageInterfaceV5.OpenLimitOrder[] memory);\\n\\n    function nftRewards() external view returns (NftRewardsInterfaceV6_3_1);\\n}\\n\\ninterface NftRewardsInterfaceV6_3_1 {\\n    struct TriggeredLimitId {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        StorageInterfaceV5.LimitOrder order;\\n    }\\n    enum OpenLimitOrderType {\\n        LEGACY,\\n        REVERSAL,\\n        MOMENTUM\\n    }\\n\\n    function storeFirstToTrigger(TriggeredLimitId calldata, address, uint) external;\\n\\n    function storeTriggerSameBlock(TriggeredLimitId calldata, address) external;\\n\\n    function unregisterTrigger(TriggeredLimitId calldata) external;\\n\\n    function distributeNftReward(TriggeredLimitId calldata, uint, uint) external;\\n\\n    function openLimitOrderTypes(address, uint, uint) external view returns (OpenLimitOrderType);\\n\\n    function setOpenLimitOrderType(address, uint, uint, OpenLimitOrderType) external;\\n\\n    function triggered(TriggeredLimitId calldata) external view returns (bool);\\n\\n    function timedOut(TriggeredLimitId calldata) external view returns (bool);\\n\\n    function botInUse(bytes32) external view returns (bool);\\n\\n    function getNftBotHashes(uint, address, uint, address, uint, uint) external pure returns (bytes32, bytes32);\\n\\n    function setNftBotInUse(bytes32, bytes32) external;\\n\\n    function nftBotInUse(bytes32, bytes32) external view returns (bool);\\n\\n    function linkToTokenRewards(uint, uint) external view returns (uint);\\n}\\n\\ninterface AggregatorInterfaceV6_4 {\\n    enum OrderType {\\n        MARKET_OPEN,\\n        MARKET_CLOSE,\\n        LIMIT_OPEN,\\n        LIMIT_CLOSE\\n    }\\n\\n    function pairsStorage() external view returns (PairsStorageInterfaceV6);\\n\\n    function getPrice(uint, OrderType, uint, uint) external returns (uint);\\n\\n    function tokenPriceDai() external returns (uint);\\n\\n    function linkFee(uint, uint) external view returns (uint);\\n\\n    function openFeeP(uint) external view returns (uint);\\n\\n    function linkPriceFeed() external view returns (ChainlinkFeedInterfaceV5);\\n\\n    function nodes(uint index) external view returns (address);\\n}\\n\\ninterface TradingCallbacksV6_4 {\\n    enum TradeType {\\n        MARKET,\\n        LIMIT\\n    }\\n    struct SimplifiedTradeId {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        TradeType tradeType;\\n    }\\n    struct LastUpdated {\\n        uint32 tp;\\n        uint32 sl;\\n        uint32 limit;\\n        uint32 created;\\n    }\\n    struct TradeData {\\n        uint40 maxSlippageP; // 1e10 (%)\\n        uint216 _placeholder; // for potential future data\\n    }\\n\\n    function tradeLastUpdated(address, uint, uint, TradeType) external view returns (LastUpdated memory);\\n\\n    function setTradeLastUpdated(SimplifiedTradeId calldata, LastUpdated memory) external;\\n\\n    function setTradeData(SimplifiedTradeId calldata, TradeData memory) external;\\n\\n    function canExecuteTimeout() external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n}\",\"keccak256\":\"0xb878c2794b85f554cd41e925a457e789e71b2512fdc0e39ce4552c1194094fab\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\ninterface TokenInterfaceV5{\\n    function burn(address, uint256) external;\\n    function mint(address, uint256) external;\\n    function transfer(address, uint256) external returns (bool);\\n    function transferFrom(address, address, uint256) external returns(bool);\\n    function balanceOf(address) external view returns(uint256);\\n    function hasRole(bytes32, address) external view returns (bool);\\n    function approve(address, uint256) external returns (bool);\\n    function allowance(address, address) external view returns (uint256);\\n}\",\"keccak256\":\"0x0b1aef35747e180443d65683c29cebff6cc9eaaac364f29f1a619f68b8df9b82\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162002030380380620020308339810160408190526200003491620000df565b6001600160a01b038516158015906200004e575060328411155b80156200005c575060648311155b80156200006a575060328211155b8015620000775750600081115b620000b75760405162461bcd60e51b815260206004820152600c60248201526b57524f4e475f504152414d5360a01b604482015260640160405180910390fd5b60609490941b6001600160601b03191660805260009290925560015560025560035562000136565b600080600080600060a08688031215620000f857600080fd5b85516001600160a01b03811681146200011057600080fd5b602087015160408801516060890151608090990151929a91995097965090945092505050565b60805160601c611e80620001b0600039600081816101ad0152818161047a0152818161071f015281816108e301528181610ae501528181610c4901528181610d8101528181610f37015281816110db015281816112d10152818161146c015281816116e4015281816119b60152611afc0152611e806000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806397365b74116100de578063c3160c6811610097578063e78c6fd211610071578063e78c6fd214610437578063ea61c6021461044a578063ee6cf8841461045d578063f79ad43e1461046557600080fd5b8063c3160c68146103f2578063c36acccd14610405578063df374a9b1461042e57600080fd5b806397365b741461038a5780639b8ab6841461039d578063a16f2534146103b0578063a6a7d393146103c3578063a73a3e35146103cc578063bc786541146103df57600080fd5b806355c780281161014b57806366f59b9b1161012557806366f59b9b146102d25780636a83de79146102db5780637792a2311461036457806394df2c7c1461037757600080fd5b806355c780281461024957806365ae45271461025c57806365cbd307146102ca57600080fd5b806303e374641461019357806316fff074146101a85780631727e82d146101ec578063201ad16d1461020357806332a7b732146102165780634e583b3114610236575b600080fd5b6101a66101a1366004611d02565b610478565b005b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101f560015481565b6040519081526020016101e3565b6101f5610211366004611c32565b6105c1565b610229610224366004611c32565b6105fd565b6040516101e39190611d3d565b6101f5610244366004611d1b565b610676565b6101a6610257366004611c32565b61071d565b6102a061026a366004611c32565b60046020819052600091825260409091206001810154600282015460038301549383015460059093015491939092909160ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0016101e3565b6101a6610881565b6101f560035481565b61032b6102e9366004611c32565b60056020819052600091825260409091208054600282015460038301546004840154948401546006909401546001600160a01b03909316949193909260ff1686565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c0016101e3565b6101f5610372366004611d02565b610a2f565b6101a6610385366004611c32565b610ae3565b6101a6610398366004611d02565b610c47565b6101a66103ab366004611c6c565b610d7f565b6101a66103be366004611d02565b610f35565b6101f560005481565b6102296103da366004611c32565b611065565b6101a66103ed366004611c32565b6110d9565b6101cf610400366004611c32565b611286565b6101cf610413366004611c32565b6006602052600090815260409020546001600160a01b031681565b6101f560025481565b6101f5610445366004611ca5565b6112cd565b6101a6610458366004611c6c565b6116e2565b6101a6611954565b6101a6610473366004611d02565b611afa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d157600080fd5b505afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190611c4f565b6001600160a01b0316336001600160a01b0316146105425760405162461bcd60e51b815260040161053990611d8a565b60405180910390fd5b60648111156105855760405162461bcd60e51b815260206004820152600f60248201526e056414c55455f41424f56455f31303608c1b6044820152606401610539565b60018190556040518181527fb85b70acaeb40f1a2351367c48842ee0ea24ec05d411d99d80bf7a020c0dbb0f906020015b60405180910390a150565b6001600160a01b03808216600090815260066020908152604080832054909316825260059052908120600201546105f790610a2f565b92915050565b6001600160a01b03811660009081526005602090815260409182902060010180548351818402810184019094528084526060939283018282801561066a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161064c575b50505050509050919050565b600080606460025485600261068b9190611de6565b6106959190611de6565b61069f9190611dc4565b905060006064600154836106b39190611de6565b6106bd9190611dc4565b90506000600354670de0b6b3a76400008684866106da9190611e05565b6106e49190611de6565b6106ee9190611dc4565b6106f89190611dc4565b6107029083611dac565b90508281116107115780610713565b825b9695505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190611c4f565b6001600160a01b0316336001600160a01b0316146107de5760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0381166000908152600560205260409020600681015460ff1661083d5760405162461bcd60e51b815260206004820152601060248201526f414c52454144595f554e41435449564560801b6044820152606401610539565b60068101805460ff191690556040516001600160a01b038316907f6dd169357c2e2b04fd13a8807a11892b88875b7c70eeb73c3b6642c58516f0db90600090a25050565b3360009081526005602052604090206003810154806108d75760405162461bcd60e51b81526020600482015260126024820152714e4f5f50454e44494e475f5245574152445360701b6044820152606401610539565b600082600301819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561093a57600080fd5b505afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190611c4f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb90604401602060405180830381600087803b1580156109bc57600080fd5b505af11580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190611ce0565b5060405181815233907f25deb48f8299e9863bda34f0d343d51341ac7ac30bf63dbeb2e8212bc4a20bf1906020015b60405180910390a25050565b60006064600354670de0b6b3a76400006001546064610a4e9190611e05565b610a5d6402540be40087611de6565b610a679190611de6565b610a719190611dc4565b610a7b9190611dc4565b6402540be400600154610a8e9190611de6565b610a989190611dac565b600254610aa59190611de6565b610aaf9190611dc4565b90506402540be400600254610ac49190611de6565b8111610ad057806105f7565b6402540be4006002546105f79190611de6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190611c4f565b6001600160a01b0316336001600160a01b031614610ba45760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0381166000908152600460205260409020600581015460ff16610c035760405162461bcd60e51b815260206004820152601060248201526f414c52454144595f554e41435449564560801b6044820152606401610539565b60058101805460ff191690556040516001600160a01b038316907f6900afc1a924abca16a7f560e2dac3d71008c1cd1d88de8a85b6e4267116d18690600090a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611c4f565b6001600160a01b0316336001600160a01b031614610d085760405162461bcd60e51b815260040161053990611d8a565b6032811115610d4a5760405162461bcd60e51b815260206004820152600e60248201526d056414c55455f41424f56455f35360941b6044820152606401610539565b60008190556040518181527f2f33e68d48a82acaa58e3dcb12a4c7738cdfe7041d35f0e29ec8c39b780b370c906020016105b6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ec44acf26040518163ffffffff1660e01b815260040160206040518083038186803b158015610dd857600080fd5b505afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611c4f565b6001600160a01b0316336001600160a01b031614610e5f5760405162461bcd60e51b815260206004820152600c60248201526b54524144494e475f4f4e4c5960a01b6044820152606401610539565b6001600160a01b0380821660009081526005602090815260408083208685168452600690925290912054909116151580610ea057506001600160a01b038216155b80610eb05750600681015460ff16155b15610eba57505050565b6001600160a01b03808416600081815260066020908152604080832080549588166001600160a01b0319968716811790915560018781018054918201815585529284209092018054909516841790945592517f0e67f4bbcd5c51b7365ca2dd861dc8094e393ca60de2ceae9d831761a839e92a9190a3505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8e57600080fd5b505afa158015610fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc69190611c4f565b6001600160a01b0316336001600160a01b031614610ff65760405162461bcd60e51b815260040161053990611d8a565b600081116110305760405162461bcd60e51b8152602060048201526007602482015266056414c55455f360cc1b6044820152606401610539565b60038190556040518181527f62c913df1aba1897f65b2df8e0d7e2c7fb00de03742aa9570d5ab3a19d1201a6906020016105b6565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561066a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161064c5750505050509050919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561113257600080fd5b505afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a9190611c4f565b6001600160a01b0316336001600160a01b03161461119a5760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0381166111dc5760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610539565b6001600160a01b0381166000908152600460205260409020600581015460ff161561123f5760405162461bcd60e51b8152602060048201526013602482015272414c4c595f414c52454144595f41435449564560681b6044820152606401610539565b60058101805460ff191660011790556040516001600160a01b038316907f80495287b7fdd5e00b7c8c1eb065c5b63474d11ffb062cc82c13da77dda8424d90600090a25050565b6001600160a01b038082166000908152600660208181526040808420549094168084526005909152928220015490919060ff166112c45760006112c6565b805b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662b127836040518163ffffffff1660e01b815260040160206040518083038186803b15801561132757600080fd5b505afa15801561133b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135f9190611c4f565b6001600160a01b0316336001600160a01b0316146113b05760405162461bcd60e51b815260206004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b6044820152606401610539565b6001600160a01b038086166000908152600660208181526040808420549094168084526005909152929091209081015460ff166113f2576000925050506116da565b600060646402540be40061140a888560020154610676565b611414908a611de6565b61141e9190611dc4565b6114289190611dc4565b905060008561143c6402540be40084611de6565b6114469190611dc4565b6040516329bc0a1f60e11b815230600482015260248101829052600160448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635378143e90606401600060405180830381600087803b1580156114b857600080fd5b505af11580156114cc573d6000803e3d6000fd5b505084546001600160a01b031660009081526004602052604081206005810154909350909150819060ff161561160b5760646000548661150c9190611de6565b6115169190611dc4565b91506064600054856115289190611de6565b6115329190611dc4565b90508a8360010160008282546115489190611dac565b92505081905550808360020160008282546115639190611dac565b925050819055508083600301600082825461157e9190611dac565b92505081905550818360040160008282546115999190611dac565b909155506115a990508286611e05565b94506115b58185611e05565b8654604080518e8152602081018590529081018590529195506001600160a01b038e8116929116907f0d54fedb563328d37f00fe5ba0bf7689519f8cf02318562adfe7b4bfab8cf4b49060600160405180910390a35b8a86600201600082825461161f9190611dac565b925050819055508386600301600082825461163a9190611dac565b92505081905550838660040160008282546116559190611dac565b92505081905550848660050160008282546116709190611dac565b9091555050604080518c8152602081018690529081018690526001600160a01b03808e1691908916907f74e9754b45c636e199e3d7bb764fae1a9acce47a984d10dcfd74849ec4babc4f9060600160405180910390a36116d08286611dac565b9750505050505050505b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561173b57600080fd5b505afa15801561174f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117739190611c4f565b6001600160a01b0316336001600160a01b0316146117a35760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0382166117e55760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610539565b6001600160a01b0382166000908152600560205260409020600681015460ff16156118525760405162461bcd60e51b815260206004820152601760248201527f52454645525245525f414c52454144595f4143544956450000000000000000006044820152606401610539565b60068101805460ff191660011790556001600160a01b0382161561190f576001600160a01b0382166000908152600460205260409020600581015460ff166118ce5760405162461bcd60e51b815260206004820152600f60248201526e414c4c595f4e4f545f41435449564560881b6044820152606401610539565b81546001600160a01b038085166001600160a01b03199283161784558254600181018455600093845260209093209092018054928616929091169190911790555b816001600160a01b0316836001600160a01b03167f15ad1d28b052a6cc2dd1d34d9e06a1847055d520e2163017e6e8aad6431b7f6a60405160405180910390a3505050565b3360009081526004602052604090206002810154806119aa5760405162461bcd60e51b81526020600482015260126024820152714e4f5f50454e44494e475f5245574152445360701b6044820152606401610539565b600082600201819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a0d57600080fd5b505afa158015611a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a459190611c4f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb90604401602060405180830381600087803b158015611a8f57600080fd5b505af1158015611aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac79190611ce0565b5060405181815233907f3dfe9be199655709d01d635bf441264a809a090c98ed7aae9abdc85f7dcbc09d90602001610a23565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5357600080fd5b505afa158015611b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8b9190611c4f565b6001600160a01b0316336001600160a01b031614611bbb5760405162461bcd60e51b815260040161053990611d8a565b6032811115611bfd5760405162461bcd60e51b815260206004820152600e60248201526d056414c55455f41424f56455f35360941b6044820152606401610539565b60028190556040518181527f4dec17ad9a229f707b7c2fb9531cd3b9c548f9eca80c03457ca38a0bb1df35fe906020016105b6565b600060208284031215611c4457600080fd5b81356112c681611e32565b600060208284031215611c6157600080fd5b81516112c681611e32565b60008060408385031215611c7f57600080fd5b8235611c8a81611e32565b91506020830135611c9a81611e32565b809150509250929050565b60008060008060808587031215611cbb57600080fd5b8435611cc681611e32565b966020860135965060408601359560600135945092505050565b600060208284031215611cf257600080fd5b815180151581146112c657600080fd5b600060208284031215611d1457600080fd5b5035919050565b60008060408385031215611d2e57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015611d7e5783516001600160a01b031683529284019291840191600101611d59565b50909695505050505050565b602080825260089082015267474f565f4f4e4c5960c01b604082015260600190565b60008219821115611dbf57611dbf611e1c565b500190565b600082611de157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611e0057611e00611e1c565b500290565b600082821015611e1757611e17611e1c565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611e4757600080fd5b5056fea26469706673582212200af0cef5b6ca5ef84b099c0e62f22b3c78b5cbc4780f7fc13466df6e72db304764736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c806397365b74116100de578063c3160c6811610097578063e78c6fd211610071578063e78c6fd214610437578063ea61c6021461044a578063ee6cf8841461045d578063f79ad43e1461046557600080fd5b8063c3160c68146103f2578063c36acccd14610405578063df374a9b1461042e57600080fd5b806397365b741461038a5780639b8ab6841461039d578063a16f2534146103b0578063a6a7d393146103c3578063a73a3e35146103cc578063bc786541146103df57600080fd5b806355c780281161014b57806366f59b9b1161012557806366f59b9b146102d25780636a83de79146102db5780637792a2311461036457806394df2c7c1461037757600080fd5b806355c780281461024957806365ae45271461025c57806365cbd307146102ca57600080fd5b806303e374641461019357806316fff074146101a85780631727e82d146101ec578063201ad16d1461020357806332a7b732146102165780634e583b3114610236575b600080fd5b6101a66101a1366004611d02565b610478565b005b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101f560015481565b6040519081526020016101e3565b6101f5610211366004611c32565b6105c1565b610229610224366004611c32565b6105fd565b6040516101e39190611d3d565b6101f5610244366004611d1b565b610676565b6101a6610257366004611c32565b61071d565b6102a061026a366004611c32565b60046020819052600091825260409091206001810154600282015460038301549383015460059093015491939092909160ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0016101e3565b6101a6610881565b6101f560035481565b61032b6102e9366004611c32565b60056020819052600091825260409091208054600282015460038301546004840154948401546006909401546001600160a01b03909316949193909260ff1686565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c0016101e3565b6101f5610372366004611d02565b610a2f565b6101a6610385366004611c32565b610ae3565b6101a6610398366004611d02565b610c47565b6101a66103ab366004611c6c565b610d7f565b6101a66103be366004611d02565b610f35565b6101f560005481565b6102296103da366004611c32565b611065565b6101a66103ed366004611c32565b6110d9565b6101cf610400366004611c32565b611286565b6101cf610413366004611c32565b6006602052600090815260409020546001600160a01b031681565b6101f560025481565b6101f5610445366004611ca5565b6112cd565b6101a6610458366004611c6c565b6116e2565b6101a6611954565b6101a6610473366004611d02565b611afa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d157600080fd5b505afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190611c4f565b6001600160a01b0316336001600160a01b0316146105425760405162461bcd60e51b815260040161053990611d8a565b60405180910390fd5b60648111156105855760405162461bcd60e51b815260206004820152600f60248201526e056414c55455f41424f56455f31303608c1b6044820152606401610539565b60018190556040518181527fb85b70acaeb40f1a2351367c48842ee0ea24ec05d411d99d80bf7a020c0dbb0f906020015b60405180910390a150565b6001600160a01b03808216600090815260066020908152604080832054909316825260059052908120600201546105f790610a2f565b92915050565b6001600160a01b03811660009081526005602090815260409182902060010180548351818402810184019094528084526060939283018282801561066a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161064c575b50505050509050919050565b600080606460025485600261068b9190611de6565b6106959190611de6565b61069f9190611dc4565b905060006064600154836106b39190611de6565b6106bd9190611dc4565b90506000600354670de0b6b3a76400008684866106da9190611e05565b6106e49190611de6565b6106ee9190611dc4565b6106f89190611dc4565b6107029083611dac565b90508281116107115780610713565b825b9695505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561077657600080fd5b505afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190611c4f565b6001600160a01b0316336001600160a01b0316146107de5760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0381166000908152600560205260409020600681015460ff1661083d5760405162461bcd60e51b815260206004820152601060248201526f414c52454144595f554e41435449564560801b6044820152606401610539565b60068101805460ff191690556040516001600160a01b038316907f6dd169357c2e2b04fd13a8807a11892b88875b7c70eeb73c3b6642c58516f0db90600090a25050565b3360009081526005602052604090206003810154806108d75760405162461bcd60e51b81526020600482015260126024820152714e4f5f50454e44494e475f5245574152445360701b6044820152606401610539565b600082600301819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561093a57600080fd5b505afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190611c4f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb90604401602060405180830381600087803b1580156109bc57600080fd5b505af11580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190611ce0565b5060405181815233907f25deb48f8299e9863bda34f0d343d51341ac7ac30bf63dbeb2e8212bc4a20bf1906020015b60405180910390a25050565b60006064600354670de0b6b3a76400006001546064610a4e9190611e05565b610a5d6402540be40087611de6565b610a679190611de6565b610a719190611dc4565b610a7b9190611dc4565b6402540be400600154610a8e9190611de6565b610a989190611dac565b600254610aa59190611de6565b610aaf9190611dc4565b90506402540be400600254610ac49190611de6565b8111610ad057806105f7565b6402540be4006002546105f79190611de6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190611c4f565b6001600160a01b0316336001600160a01b031614610ba45760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0381166000908152600460205260409020600581015460ff16610c035760405162461bcd60e51b815260206004820152601060248201526f414c52454144595f554e41435449564560801b6044820152606401610539565b60058101805460ff191690556040516001600160a01b038316907f6900afc1a924abca16a7f560e2dac3d71008c1cd1d88de8a85b6e4267116d18690600090a25050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611c4f565b6001600160a01b0316336001600160a01b031614610d085760405162461bcd60e51b815260040161053990611d8a565b6032811115610d4a5760405162461bcd60e51b815260206004820152600e60248201526d056414c55455f41424f56455f35360941b6044820152606401610539565b60008190556040518181527f2f33e68d48a82acaa58e3dcb12a4c7738cdfe7041d35f0e29ec8c39b780b370c906020016105b6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ec44acf26040518163ffffffff1660e01b815260040160206040518083038186803b158015610dd857600080fd5b505afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611c4f565b6001600160a01b0316336001600160a01b031614610e5f5760405162461bcd60e51b815260206004820152600c60248201526b54524144494e475f4f4e4c5960a01b6044820152606401610539565b6001600160a01b0380821660009081526005602090815260408083208685168452600690925290912054909116151580610ea057506001600160a01b038216155b80610eb05750600681015460ff16155b15610eba57505050565b6001600160a01b03808416600081815260066020908152604080832080549588166001600160a01b0319968716811790915560018781018054918201815585529284209092018054909516841790945592517f0e67f4bbcd5c51b7365ca2dd861dc8094e393ca60de2ceae9d831761a839e92a9190a3505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015610f8e57600080fd5b505afa158015610fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc69190611c4f565b6001600160a01b0316336001600160a01b031614610ff65760405162461bcd60e51b815260040161053990611d8a565b600081116110305760405162461bcd60e51b8152602060048201526007602482015266056414c55455f360cc1b6044820152606401610539565b60038190556040518181527f62c913df1aba1897f65b2df8e0d7e2c7fb00de03742aa9570d5ab3a19d1201a6906020016105b6565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561066a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161064c5750505050509050919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561113257600080fd5b505afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a9190611c4f565b6001600160a01b0316336001600160a01b03161461119a5760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0381166111dc5760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610539565b6001600160a01b0381166000908152600460205260409020600581015460ff161561123f5760405162461bcd60e51b8152602060048201526013602482015272414c4c595f414c52454144595f41435449564560681b6044820152606401610539565b60058101805460ff191660011790556040516001600160a01b038316907f80495287b7fdd5e00b7c8c1eb065c5b63474d11ffb062cc82c13da77dda8424d90600090a25050565b6001600160a01b038082166000908152600660208181526040808420549094168084526005909152928220015490919060ff166112c45760006112c6565b805b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662b127836040518163ffffffff1660e01b815260040160206040518083038186803b15801561132757600080fd5b505afa15801561133b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135f9190611c4f565b6001600160a01b0316336001600160a01b0316146113b05760405162461bcd60e51b815260206004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b6044820152606401610539565b6001600160a01b038086166000908152600660208181526040808420549094168084526005909152929091209081015460ff166113f2576000925050506116da565b600060646402540be40061140a888560020154610676565b611414908a611de6565b61141e9190611dc4565b6114289190611dc4565b905060008561143c6402540be40084611de6565b6114469190611dc4565b6040516329bc0a1f60e11b815230600482015260248101829052600160448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635378143e90606401600060405180830381600087803b1580156114b857600080fd5b505af11580156114cc573d6000803e3d6000fd5b505084546001600160a01b031660009081526004602052604081206005810154909350909150819060ff161561160b5760646000548661150c9190611de6565b6115169190611dc4565b91506064600054856115289190611de6565b6115329190611dc4565b90508a8360010160008282546115489190611dac565b92505081905550808360020160008282546115639190611dac565b925050819055508083600301600082825461157e9190611dac565b92505081905550818360040160008282546115999190611dac565b909155506115a990508286611e05565b94506115b58185611e05565b8654604080518e8152602081018590529081018590529195506001600160a01b038e8116929116907f0d54fedb563328d37f00fe5ba0bf7689519f8cf02318562adfe7b4bfab8cf4b49060600160405180910390a35b8a86600201600082825461161f9190611dac565b925050819055508386600301600082825461163a9190611dac565b92505081905550838660040160008282546116559190611dac565b92505081905550848660050160008282546116709190611dac565b9091555050604080518c8152602081018690529081018690526001600160a01b03808e1691908916907f74e9754b45c636e199e3d7bb764fae1a9acce47a984d10dcfd74849ec4babc4f9060600160405180910390a36116d08286611dac565b9750505050505050505b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b15801561173b57600080fd5b505afa15801561174f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117739190611c4f565b6001600160a01b0316336001600160a01b0316146117a35760405162461bcd60e51b815260040161053990611d8a565b6001600160a01b0382166117e55760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610539565b6001600160a01b0382166000908152600560205260409020600681015460ff16156118525760405162461bcd60e51b815260206004820152601760248201527f52454645525245525f414c52454144595f4143544956450000000000000000006044820152606401610539565b60068101805460ff191660011790556001600160a01b0382161561190f576001600160a01b0382166000908152600460205260409020600581015460ff166118ce5760405162461bcd60e51b815260206004820152600f60248201526e414c4c595f4e4f545f41435449564560881b6044820152606401610539565b81546001600160a01b038085166001600160a01b03199283161784558254600181018455600093845260209093209092018054928616929091169190911790555b816001600160a01b0316836001600160a01b03167f15ad1d28b052a6cc2dd1d34d9e06a1847055d520e2163017e6e8aad6431b7f6a60405160405180910390a3505050565b3360009081526004602052604090206002810154806119aa5760405162461bcd60e51b81526020600482015260126024820152714e4f5f50454e44494e475f5245574152445360701b6044820152606401610539565b600082600201819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a0d57600080fd5b505afa158015611a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a459190611c4f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb90604401602060405180830381600087803b158015611a8f57600080fd5b505af1158015611aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac79190611ce0565b5060405181815233907f3dfe9be199655709d01d635bf441264a809a090c98ed7aae9abdc85f7dcbc09d90602001610a23565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5357600080fd5b505afa158015611b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8b9190611c4f565b6001600160a01b0316336001600160a01b031614611bbb5760405162461bcd60e51b815260040161053990611d8a565b6032811115611bfd5760405162461bcd60e51b815260206004820152600e60248201526d056414c55455f41424f56455f35360941b6044820152606401610539565b60028190556040518181527f4dec17ad9a229f707b7c2fb9531cd3b9c548f9eca80c03457ca38a0bb1df35fe906020016105b6565b600060208284031215611c4457600080fd5b81356112c681611e32565b600060208284031215611c6157600080fd5b81516112c681611e32565b60008060408385031215611c7f57600080fd5b8235611c8a81611e32565b91506020830135611c9a81611e32565b809150509250929050565b60008060008060808587031215611cbb57600080fd5b8435611cc681611e32565b966020860135965060408601359560600135945092505050565b600060208284031215611cf257600080fd5b815180151581146112c657600080fd5b600060208284031215611d1457600080fd5b5035919050565b60008060408385031215611d2e57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015611d7e5783516001600160a01b031683529284019291840191600101611d59565b50909695505050505050565b602080825260089082015267474f565f4f4e4c5960c01b604082015260600190565b60008219821115611dbf57611dbf611e1c565b500190565b600082611de157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611e0057611e00611e1c565b500290565b600082821015611e1757611e17611e1c565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611e4757600080fd5b5056fea26469706673582212200af0cef5b6ca5ef84b099c0e62f22b3c78b5cbc4780f7fc13466df6e72db304764736f6c63430008070033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16338,
        "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
        "label": "allyFeeP",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 16340,
        "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
        "label": "startReferrerFeeP",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 16342,
        "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
        "label": "openFeeP",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 16344,
        "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
        "label": "targetVolumeDai",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 16379,
        "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
        "label": "allyDetails",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(AllyDetails)16358_storage)"
      },
      {
        "astId": 16384,
        "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
        "label": "referrerDetails",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(ReferrerDetails)16374_storage)"
      },
      {
        "astId": 16388,
        "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
        "label": "referrerByTrader",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_struct(AllyDetails)16358_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GNSReferralsV6_2.AllyDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(AllyDetails)16358_storage"
      },
      "t_mapping(t_address,t_struct(ReferrerDetails)16374_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GNSReferralsV6_2.ReferrerDetails)",
        "numberOfBytes": "32",
        "value": "t_struct(ReferrerDetails)16374_storage"
      },
      "t_struct(AllyDetails)16358_storage": {
        "encoding": "inplace",
        "label": "struct GNSReferralsV6_2.AllyDetails",
        "members": [
          {
            "astId": 16347,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "referrersReferred",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 16349,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "volumeReferredDai",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 16351,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "pendingRewardsToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 16353,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "totalRewardsToken",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 16355,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "totalRewardsValueDai",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 16357,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "active",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(ReferrerDetails)16374_storage": {
        "encoding": "inplace",
        "label": "struct GNSReferralsV6_2.ReferrerDetails",
        "members": [
          {
            "astId": 16360,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "ally",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 16363,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "tradersReferred",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 16365,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "volumeReferredDai",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 16367,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "pendingRewardsToken",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 16369,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "totalRewardsToken",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 16371,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "totalRewardsValueDai",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 16373,
            "contract": "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2",
            "label": "active",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}