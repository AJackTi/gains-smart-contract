{
  "address": "0xcB2A8283FD571D25585712a258E1627d9e355e13",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_currentOrderId",
          "type": "uint256"
        },
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "_storageT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "FeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "FeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "GroupAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "GroupUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "to",
          "type": "string"
        }
      ],
      "name": "PairAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "PairUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "openFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftLimitOrderFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minLevPosDai",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Fee",
          "name": "_fee",
          "type": "tuple"
        }
      ],
      "name": "addFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "job",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "minLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxCollateralP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Group",
          "name": "_group",
          "type": "tuple"
        }
      ],
      "name": "addGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair",
          "name": "_pair",
          "type": "tuple"
        }
      ],
      "name": "addPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair[]",
          "name": "_pairs",
          "type": "tuple[]"
        }
      ],
      "name": "addPairs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentOrderId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fees",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "openFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "closeFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "oracleFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftLimitOrderFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "referralFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minLevPosDai",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_long",
          "type": "bool"
        }
      ],
      "name": "groupCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "groupMaxCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "groups",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "job",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "minLeverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLeverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxCollateralP",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "groupsCollaterals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "groupsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "guaranteedSlEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "isPairListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairCloseFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairFeed",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "feed1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feed2",
              "type": "address"
            },
            {
              "internalType": "enum GNSPairsStorageV6.FeedCalculation",
              "name": "feedCalculation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxDeviationP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Feed",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairJob",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairMaxLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairMinLevPosDai",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairMinLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairNftLimitOrderFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairOpenFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairOracleFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairReferralFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairSpreadP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "to",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "feed1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feed2",
              "type": "address"
            },
            {
              "internalType": "enum GNSPairsStorageV6.FeedCalculation",
              "name": "feedCalculation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxDeviationP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Feed",
          "name": "feed",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "spreadP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "groupIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "pairsBackend",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "job",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "minLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxCollateralP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Group",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "openFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftLimitOrderFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minLevPosDai",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Fee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storageT",
      "outputs": [
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "openFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftLimitOrderFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minLevPosDai",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Fee",
          "name": "_fee",
          "type": "tuple"
        }
      ],
      "name": "updateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "job",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "minLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxCollateralP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Group",
          "name": "_group",
          "type": "tuple"
        }
      ],
      "name": "updateGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_long",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_increase",
          "type": "bool"
        }
      ],
      "name": "updateGroupCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair",
          "name": "_pair",
          "type": "tuple"
        }
      ],
      "name": "updatePair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x341f9bcc4b06a8a46decc450bb6b1a3e6e132a9016e3bd6de8a124ee0fe18da9",
  "receipt": {
    "to": null,
    "from": "0xE5f1Eb09e0d23c453FD787b21E6d082CDEE6b7B3",
    "contractAddress": "0xcB2A8283FD571D25585712a258E1627d9e355e13",
    "transactionIndex": 20,
    "gasUsed": "2743879",
    "logsBloom": "0x
    "blockHash": "0x209b44a87cd2881176f359f00c595478411bf2de3928b2c52afc1a120df26b06",
    "transactionHash": "0x341f9bcc4b06a8a46decc450bb6b1a3e6e132a9016e3bd6de8a124ee0fe18da9",
    "logs": [
      {
        "transactionIndex": 20,
        "blockNumber": 44907009,
        "transactionHash": "0x341f9bcc4b06a8a46decc450bb6b1a3e6e132a9016e3bd6de8a124ee0fe18da9",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e5f1eb09e0d23c453fd787b21e6d082cdee6b7b3",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000e9f50aba70900000000000000000000000000000000000000000000000000cf63079e3da6e24a0000000000000000000000000000000000000000000012ba144456508e67bec6000000000000000000000000000000000000000000000000cf54684d91ffd94a0000000000000000000000000000000000000000000012ba1452f5a13a0ec7c6",
        "logIndex": 77,
        "blockHash": "0x209b44a87cd2881176f359f00c595478411bf2de3928b2c52afc1a120df26b06"
      }
    ],
    "blockNumber": 44907009,
    "cumulativeGasUsed": "4872263",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1,
    "0xA85cEC66cce2d1dC583A0Fb50EbF66e61ea4df58"
  ],
  "numDeployments": 1,
  "solcInputHash": "62ead6fd019c01c7f32a188a2b283d94",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_currentOrderId\",\"type\":\"uint256\"},{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"_storageT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"FeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"GroupAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"GroupUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"PairAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"PairUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Fee\",\"name\":\"_fee\",\"type\":\"tuple\"}],\"name\":\"addFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Group\",\"name\":\"_group\",\"type\":\"tuple\"}],\"name\":\"addGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair\",\"name\":\"_pair\",\"type\":\"tuple\"}],\"name\":\"addPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair[]\",\"name\":\"_pairs\",\"type\":\"tuple[]\"}],\"name\":\"addPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentOrderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_long\",\"type\":\"bool\"}],\"name\":\"groupCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"groupMaxCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"groups\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"groupsCollaterals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"groupsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"guaranteedSlEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isPairListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairCloseFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairFeed\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairJob\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairMaxLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairMinLevPosDai\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairMinLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairNftLimitOrderFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairOpenFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairOracleFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairReferralFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairSpreadP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"pairsBackend\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Group\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Fee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageT\",\"outputs\":[{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Fee\",\"name\":\"_fee\",\"type\":\"tuple\"}],\"name\":\"updateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Group\",\"name\":\"_group\",\"type\":\"tuple\"}],\"name\":\"updateGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_long\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_increase\",\"type\":\"bool\"}],\"name\":\"updateGroupCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair\",\"name\":\"_pair\",\"type\":\"tuple\"}],\"name\":\"updatePair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/GNSPairStorageV6.sol\":\"GNSPairsStorageV6\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/GNSPairStorageV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"../interfaces/StorageInterfaceV5.sol\\\";\\n\\ncontract GNSPairsStorageV6 {\\n    // Params (constant)\\n    uint constant MIN_LEVERAGE = 2;\\n    uint constant MAX_LEVERAGE = 1000;\\n\\n    // Custom data types\\n    enum FeedCalculation { DEFAULT, INVERT, COMBINE }\\n    struct Feed{ address feed1; address feed2; FeedCalculation feedCalculation; uint maxDeviationP; } // PRECISION (%)\\n\\n    struct Pair{\\n        string from;\\n        string to;\\n        Feed feed;\\n        uint spreadP;               // PRECISION\\n        uint groupIndex;\\n        uint feeIndex;\\n    }\\n    struct Group{\\n        string name;\\n        bytes32 job;\\n        uint minLeverage;\\n        uint maxLeverage;\\n        uint maxCollateralP;        // % (of DAI vault current balance)\\n    }\\n    struct Fee{\\n        string name;\\n        uint openFeeP;              // PRECISION (% of leveraged pos)\\n        uint closeFeeP;             // PRECISION (% of leveraged pos)\\n        uint oracleFeeP;            // PRECISION (% of leveraged pos)\\n        uint nftLimitOrderFeeP;     // PRECISION (% of leveraged pos)\\n        uint referralFeeP;          // PRECISION (% of leveraged pos)\\n        uint minLevPosDai;          // 1e18 (collateral x leverage, useful for min fee)\\n    }\\n\\n    // State\\n    uint public currentOrderId;\\n    uint public pairsCount;\\n    uint public groupsCount;\\n    uint public feesCount;\\n\\n    StorageInterfaceV5 public storageT;\\n\\n    mapping(uint => Pair) public pairs;\\n    mapping(uint => Group) public groups;\\n    mapping(uint => Fee) public fees;\\n\\n    mapping(string => mapping(string => bool)) public isPairListed;\\n    mapping(uint => uint[2]) public groupsCollaterals; // (long, short)\\n\\n    // Events\\n    event PairAdded(uint index, string from, string to);\\n    event PairUpdated(uint index);\\n\\n    event GroupAdded(uint index, string name);\\n    event GroupUpdated(uint index);\\n    \\n    event FeeAdded(uint index, string name);\\n    event FeeUpdated(uint index);\\n\\n    constructor(uint _currentOrderId, StorageInterfaceV5 _storageT) {\\n        require(_currentOrderId > 0, \\\"ORDER_ID_0\\\");\\n        currentOrderId = _currentOrderId;\\n        storageT = _storageT;\\n    }\\n\\n    // Modifiers\\n    modifier onlyGov(){ require(msg.sender == storageT.gov(), \\\"GOV_ONLY\\\"); _; }\\n    \\n    modifier groupListed(uint _groupIndex){\\n        require(groups[_groupIndex].minLeverage > 0, \\\"GROUP_NOT_LISTED\\\");\\n        _;\\n    }\\n    modifier feeListed(uint _feeIndex){\\n        require(fees[_feeIndex].openFeeP > 0, \\\"FEE_NOT_LISTED\\\");\\n        _;\\n    }\\n\\n    modifier feedOk(Feed calldata _feed){\\n        require(_feed.maxDeviationP > 0 && _feed.feed1 != address(0), \\\"WRONG_FEED\\\");\\n        require(_feed.feedCalculation != FeedCalculation.COMBINE || _feed.feed2 != address(0), \\\"FEED_2_MISSING\\\");\\n        _;\\n    }\\n    modifier groupOk(Group calldata _group){\\n        require(_group.job != bytes32(0), \\\"JOB_EMPTY\\\");\\n        require(_group.minLeverage >= MIN_LEVERAGE && _group.maxLeverage <= MAX_LEVERAGE\\n            && _group.minLeverage < _group.maxLeverage, \\\"WRONG_LEVERAGES\\\");\\n        _;\\n    }\\n    modifier feeOk(Fee calldata _fee){\\n        require(_fee.openFeeP > 0 && _fee.closeFeeP > 0 && _fee.oracleFeeP > 0\\n            && _fee.nftLimitOrderFeeP > 0 && _fee.referralFeeP > 0 && _fee.minLevPosDai > 0, \\\"WRONG_FEES\\\");\\n        _;\\n    }\\n\\n    // Manage pairs\\n    function addPair(Pair calldata _pair) public onlyGov feedOk(_pair.feed) groupListed(_pair.groupIndex) feeListed(_pair.feeIndex){\\n        require(!isPairListed[_pair.from][_pair.to], \\\"PAIR_ALREADY_LISTED\\\");\\n        \\n        pairs[pairsCount] = _pair;\\n        isPairListed[_pair.from][_pair.to] = true;\\n        \\n        emit PairAdded(pairsCount++, _pair.from, _pair.to);\\n    }\\n    function addPairs(Pair[] calldata _pairs) external{\\n        for(uint i = 0; i < _pairs.length; i++){\\n            addPair(_pairs[i]);\\n        }\\n    }\\n    function updatePair(uint _pairIndex, Pair calldata _pair) external onlyGov feedOk(_pair.feed) feeListed(_pair.feeIndex){\\n        Pair storage p = pairs[_pairIndex];\\n        require(isPairListed[p.from][p.to], \\\"PAIR_NOT_LISTED\\\");\\n\\n        p.feed = _pair.feed;\\n        p.spreadP = _pair.spreadP;\\n        p.feeIndex = _pair.feeIndex;\\n        \\n        emit PairUpdated(_pairIndex);\\n    }\\n\\n    // Manage groups\\n    function addGroup(Group calldata _group) external onlyGov groupOk(_group){\\n        groups[groupsCount] = _group;\\n        emit GroupAdded(groupsCount++, _group.name);\\n    }\\n    function updateGroup(uint _id, Group calldata _group) external onlyGov groupListed(_id) groupOk(_group){\\n        groups[_id] = _group;\\n        emit GroupUpdated(_id);\\n    }\\n\\n    // Manage fees\\n    function addFee(Fee calldata _fee) external onlyGov feeOk(_fee){\\n        fees[feesCount] = _fee;\\n        emit FeeAdded(feesCount++, _fee.name);\\n    }\\n    function updateFee(uint _id, Fee calldata _fee) external onlyGov feeListed(_id) feeOk(_fee){\\n        fees[_id] = _fee;\\n        emit FeeUpdated(_id);\\n    }\\n\\n    // Update collateral open exposure for a group (callbacks)\\n    function updateGroupCollateral(uint _pairIndex, uint _amount, bool _long, bool _increase) external{\\n        require(msg.sender == storageT.callbacks(), \\\"CALLBACKS_ONLY\\\");\\n\\n        uint[2] storage collateralOpen = groupsCollaterals[pairs[_pairIndex].groupIndex];\\n        uint index = _long ? 0 : 1;\\n\\n        if(_increase){\\n            collateralOpen[index] += _amount;\\n        }else{\\n            collateralOpen[index] = collateralOpen[index] > _amount ? collateralOpen[index] - _amount : 0;\\n        }\\n    }\\n\\n    // Fetch relevant info for order (aggregator)\\n    function pairJob(uint _pairIndex) external returns(string memory, string memory, bytes32, uint){\\n        require(msg.sender == address(storageT.priceAggregator()), \\\"AGGREGATOR_ONLY\\\");\\n        \\n        Pair memory p = pairs[_pairIndex];\\n        require(isPairListed[p.from][p.to], \\\"PAIR_NOT_LISTED\\\");\\n        \\n        return (p.from, p.to, groups[p.groupIndex].job, currentOrderId++);\\n    }\\n\\n    // Getters (pairs & groups)\\n    function pairFeed(uint _pairIndex) external view returns(Feed memory){\\n        return pairs[_pairIndex].feed;\\n    }\\n    function pairSpreadP(uint _pairIndex) external view returns(uint){\\n        return pairs[_pairIndex].spreadP;\\n    }\\n    function pairMinLeverage(uint _pairIndex) external view returns(uint){\\n        return groups[pairs[_pairIndex].groupIndex].minLeverage;\\n    }\\n    function pairMaxLeverage(uint _pairIndex) external view returns(uint){\\n        return groups[pairs[_pairIndex].groupIndex].maxLeverage;\\n    }\\n    function groupMaxCollateral(uint _pairIndex) external view returns(uint){\\n        return groups[pairs[_pairIndex].groupIndex].maxCollateralP*storageT.vault().currentBalanceDai()/100;\\n    }\\n    function groupCollateral(uint _pairIndex, bool _long) external view returns(uint){\\n        return groupsCollaterals[pairs[_pairIndex].groupIndex][_long ? 0 : 1];\\n    }\\n    function guaranteedSlEnabled(uint _pairIndex) external view returns(bool){\\n        return pairs[_pairIndex].groupIndex == 0; // crypto only\\n    }\\n\\n    // Getters (fees)\\n    function pairOpenFeeP(uint _pairIndex) external view returns(uint){ \\n        return fees[pairs[_pairIndex].feeIndex].openFeeP;\\n    }\\n    function pairCloseFeeP(uint _pairIndex) external view returns(uint){ \\n        return fees[pairs[_pairIndex].feeIndex].closeFeeP; \\n    }\\n    function pairOracleFeeP(uint _pairIndex) external view returns(uint){ \\n        return fees[pairs[_pairIndex].feeIndex].oracleFeeP; \\n    }\\n    function pairNftLimitOrderFeeP(uint _pairIndex) external view returns(uint){ \\n        return fees[pairs[_pairIndex].feeIndex].nftLimitOrderFeeP; \\n    }\\n    function pairReferralFeeP(uint _pairIndex) external view returns(uint){ \\n        return fees[pairs[_pairIndex].feeIndex].referralFeeP; \\n    }\\n    function pairMinLevPosDai(uint _pairIndex) external view returns(uint){\\n        return fees[pairs[_pairIndex].feeIndex].minLevPosDai;\\n    }\\n\\n    // Getters (backend)\\n    function pairsBackend(uint _index) external view returns(Pair memory, Group memory, Fee memory){\\n        Pair memory p = pairs[_index];\\n        return (p, groups[p.groupIndex], fees[p.feeIndex]);\\n    }\\n}\",\"keccak256\":\"0x4db125de29133df8b7e6ebf854aab8173eb7279e96174dfc474fa72608593eb2\",\"license\":\"MIT\"},\"contracts/interfaces/ChainlinkFeedInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface ChainlinkFeedInterfaceV5{\\n    function latestRoundData() external view returns (uint80,int,uint,uint,uint80);\\n}\",\"keccak256\":\"0x1afaa4a2058e59dc5b36792e6429505f5f976edea9b272c7a7499fa7ce2fab6e\",\"license\":\"MIT\"},\"contracts/interfaces/IGToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\npragma abicoder v2;\\n\\ninterface IGToken {\\n    function manager() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function currentEpoch() external view returns (uint);\\n\\n    function currentEpochStart() external view returns (uint);\\n\\n    function currentEpochPositiveOpenPnl() external view returns (uint);\\n\\n    function updateAccPnlPerTokenUsed(uint prevPositiveOpenPnl, uint newPositiveOpenPnl) external returns (uint);\\n\\n    struct LockedDeposit {\\n        address owner;\\n        uint shares; // 1e18\\n        uint assetsDeposited; // 1e18\\n        uint assetsDiscount; // 1e18\\n        uint atTimestamp; // timestamp\\n        uint lockDuration; // timestamp\\n    }\\n\\n    function getLockedDeposit(uint depositId) external view returns (LockedDeposit memory);\\n\\n    function sendAssets(uint assets, address receiver) external;\\n\\n    function receiveAssets(uint assets, address user) external;\\n\\n    function distributeReward(uint assets) external;\\n\\n    function currentBalanceDai() external view returns (uint);\\n\\n    function tvl() external view returns (uint);\\n\\n    function marketCap() external view returns (uint);\\n\\n    function getPendingAccBlockWeightedMarketCap(uint currentBlock) external view returns (uint);\\n}\",\"keccak256\":\"0xcbb5e5a89f1dcf814417042d09e52a33b1a6c7a5cf47b7cccf41892a9a160f3b\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface NftInterfaceV5{\\n    function balanceOf(address) external view returns (uint);\\n    function ownerOf(uint) external view returns (address);\\n    function transferFrom(address, address, uint) external;\\n    function tokenOfOwnerByIndex(address, uint) external view returns(uint);\\n}\",\"keccak256\":\"0xe5b2bff53bc90f2756f874af8adca6188bd3769e79e2a7bd47c79f5d70fca267\",\"license\":\"MIT\"},\"contracts/interfaces/PairsStorageInterfaceV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface PairsStorageInterfaceV6{\\n    enum FeedCalculation { DEFAULT, INVERT, COMBINE }    // FEED 1, 1 / (FEED 1), (FEED 1)/(FEED 2)\\n    struct Feed{ address feed1; address feed2; FeedCalculation feedCalculation; uint maxDeviationP; } // PRECISION (%)\\n    function incrementCurrentOrderId() external returns(uint);\\n    function updateGroupCollateral(uint, uint, bool, bool) external;\\n    function pairJob(uint) external returns(string memory, string memory, bytes32, uint);\\n    function pairFeed(uint) external view returns(Feed memory);\\n    function pairSpreadP(uint) external view returns(uint);\\n    function pairMinLeverage(uint) external view returns(uint);\\n    function pairMaxLeverage(uint) external view returns(uint);\\n    function groupMaxCollateral(uint) external view returns(uint);\\n    function groupCollateral(uint, bool) external view returns(uint);\\n    function guaranteedSlEnabled(uint) external view returns(bool);\\n    function pairOpenFeeP(uint) external view returns(uint);\\n    function pairCloseFeeP(uint) external view returns(uint);\\n    function pairOracleFeeP(uint) external view returns(uint);\\n    function pairNftLimitOrderFeeP(uint) external view returns(uint);\\n    function pairReferralFeeP(uint) external view returns(uint);\\n    function pairMinLevPosDai(uint) external view returns(uint);\\n}\\n\",\"keccak256\":\"0x877d59f2a896b6b0dbda7c5b0af6189a0ee7d680471d7329051fb9024d653c38\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"./TokenInterfaceV5.sol\\\";\\nimport \\\"./NftInterfaceV5.sol\\\";\\nimport \\\"./IGToken.sol\\\";\\nimport \\\"./PairsStorageInterfaceV6.sol\\\";\\nimport \\\"./ChainlinkFeedInterfaceV5.sol\\\";\\n\\npragma solidity 0.8.20;\\npragma abicoder v2;\\n\\ninterface PoolInterfaceV5 {\\n    function increaseAccTokensPerLp(uint) external;\\n}\\n\\ninterface PausableInterfaceV5 {\\n    function isPaused() external view returns (bool);\\n}\\n\\ninterface StorageInterfaceV5 {\\n    enum LimitOrder {\\n        TP,\\n        SL,\\n        LIQ,\\n        OPEN\\n    }\\n    struct Trade {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint initialPosToken; // 1e18\\n        uint positionSizeDai; // 1e18\\n        uint openPrice; // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION\\n        uint sl; // PRECISION\\n    }\\n    struct TradeInfo {\\n        uint tokenId;\\n        uint tokenPriceDai; // PRECISION\\n        uint openInterestDai; // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize; // 1e18 (DAI or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION (%)\\n        uint sl; // PRECISION (%)\\n        uint minPrice; // PRECISION\\n        uint maxPrice; // PRECISION\\n        uint block;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingMarketOrder {\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice; // PRECISION\\n        uint slippageP; // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingNftOrder {\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n\\n    function PRECISION() external pure returns (uint);\\n\\n    function gov() external view returns (address);\\n\\n    function dev() external view returns (address);\\n\\n    function dai() external view returns (TokenInterfaceV5);\\n\\n    function token() external view returns (TokenInterfaceV5);\\n\\n    function linkErc677() external view returns (TokenInterfaceV5);\\n\\n    function priceAggregator() external view returns (AggregatorInterfaceV6_4);\\n\\n    function vault() external view returns (IGToken);\\n\\n    function trading() external view returns (address);\\n\\n    function callbacks() external view returns (address);\\n\\n    function handleTokens(address, uint, bool) external;\\n\\n    function transferDai(address, address, uint) external;\\n\\n    function transferLinkToAggregator(address, uint, uint) external;\\n\\n    function unregisterTrade(address, uint, uint) external;\\n\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n\\n    function hasOpenLimitOrder(address, uint, uint) external view returns (bool);\\n\\n    function storePendingMarketOrder(PendingMarketOrder memory, uint, bool) external;\\n\\n    function openTrades(address, uint, uint) external view returns (Trade memory);\\n\\n    function openTradesInfo(address, uint, uint) external view returns (TradeInfo memory);\\n\\n    function updateSl(address, uint, uint, uint) external;\\n\\n    function updateTp(address, uint, uint, uint) external;\\n\\n    function getOpenLimitOrder(address, uint, uint) external view returns (OpenLimitOrder memory);\\n\\n    function spreadReductionsP(uint) external view returns (uint);\\n\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n\\n    function reqID_pendingMarketOrder(uint) external view returns (PendingMarketOrder memory);\\n\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n\\n    function firstEmptyTradeIndex(address, uint) external view returns (uint);\\n\\n    function firstEmptyOpenLimitIndex(address, uint) external view returns (uint);\\n\\n    function increaseNftRewards(uint, uint) external;\\n\\n    function nftSuccessTimelock() external view returns (uint);\\n\\n    function reqID_pendingNftOrder(uint) external view returns (PendingNftOrder memory);\\n\\n    function updateTrade(Trade memory) external;\\n\\n    function nftLastSuccess(uint) external view returns (uint);\\n\\n    function unregisterPendingNftOrder(uint) external;\\n\\n    function handleDevGovFees(uint, uint, bool, bool) external returns (uint);\\n\\n    function distributeLpRewards(uint) external;\\n\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n\\n    function openLimitOrdersCount(address, uint) external view returns (uint);\\n\\n    function openTradesCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketOpenCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketCloseCount(address, uint) external view returns (uint);\\n\\n    function maxTradesPerPair() external view returns (uint);\\n\\n    function pendingOrderIdsCount(address) external view returns (uint);\\n\\n    function maxPendingMarketOrders() external view returns (uint);\\n\\n    function openInterestDai(uint, uint) external view returns (uint);\\n\\n    function getPendingOrderIds(address) external view returns (uint[] memory);\\n\\n    function nfts(uint) external view returns (NftInterfaceV5);\\n\\n    function fakeBlockNumber() external view returns (uint); // Testing\\n}\\n\\ninterface IStateCopyUtils {\\n    function getOpenLimitOrders() external view returns (StorageInterfaceV5.OpenLimitOrder[] memory);\\n\\n    function nftRewards() external view returns (NftRewardsInterfaceV6_3_1);\\n}\\n\\ninterface NftRewardsInterfaceV6_3_1 {\\n    struct TriggeredLimitId {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        StorageInterfaceV5.LimitOrder order;\\n    }\\n    enum OpenLimitOrderType {\\n        LEGACY,\\n        REVERSAL,\\n        MOMENTUM\\n    }\\n\\n    function storeFirstToTrigger(TriggeredLimitId calldata, address, uint) external;\\n\\n    function storeTriggerSameBlock(TriggeredLimitId calldata, address) external;\\n\\n    function unregisterTrigger(TriggeredLimitId calldata) external;\\n\\n    function distributeNftReward(TriggeredLimitId calldata, uint, uint) external;\\n\\n    function openLimitOrderTypes(address, uint, uint) external view returns (OpenLimitOrderType);\\n\\n    function setOpenLimitOrderType(address, uint, uint, OpenLimitOrderType) external;\\n\\n    function triggered(TriggeredLimitId calldata) external view returns (bool);\\n\\n    function timedOut(TriggeredLimitId calldata) external view returns (bool);\\n\\n    function botInUse(bytes32) external view returns (bool);\\n\\n    function getNftBotHashes(uint, address, uint, address, uint, uint) external pure returns (bytes32, bytes32);\\n\\n    function setNftBotInUse(bytes32, bytes32) external;\\n\\n    function nftBotInUse(bytes32, bytes32) external view returns (bool);\\n\\n    function linkToTokenRewards(uint, uint) external view returns (uint);\\n}\\n\\ninterface AggregatorInterfaceV6_4 {\\n    enum OrderType {\\n        MARKET_OPEN,\\n        MARKET_CLOSE,\\n        LIMIT_OPEN,\\n        LIMIT_CLOSE\\n    }\\n\\n    function pairsStorage() external view returns (PairsStorageInterfaceV6);\\n\\n    function getPrice(uint, OrderType, uint, uint) external returns (uint);\\n\\n    function tokenPriceDai() external returns (uint);\\n\\n    function linkFee(uint, uint) external view returns (uint);\\n\\n    function openFeeP(uint) external view returns (uint);\\n\\n    function linkPriceFeed() external view returns (ChainlinkFeedInterfaceV5);\\n\\n    function nodes(uint index) external view returns (address);\\n}\\n\\ninterface TradingCallbacksV6_4 {\\n    enum TradeType {\\n        MARKET,\\n        LIMIT\\n    }\\n    struct SimplifiedTradeId {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        TradeType tradeType;\\n    }\\n    struct LastUpdated {\\n        uint32 tp;\\n        uint32 sl;\\n        uint32 limit;\\n        uint32 created;\\n    }\\n    struct TradeData {\\n        uint40 maxSlippageP; // 1e10 (%)\\n        uint216 _placeholder; // for potential future data\\n    }\\n\\n    function tradeLastUpdated(address, uint, uint, TradeType) external view returns (LastUpdated memory);\\n\\n    function setTradeLastUpdated(SimplifiedTradeId calldata, LastUpdated memory) external;\\n\\n    function setTradeData(SimplifiedTradeId calldata, TradeData memory) external;\\n\\n    function canExecuteTimeout() external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n}\",\"keccak256\":\"0x8a861f3c25b615a0a0383bc02d915a0fa13224113e21f1b0b882c9bc9aedef04\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ninterface TokenInterfaceV5{\\n    function burn(address, uint256) external;\\n    function mint(address, uint256) external;\\n    function transfer(address, uint256) external returns (bool);\\n    function transferFrom(address, address, uint256) external returns(bool);\\n    function balanceOf(address) external view returns(uint256);\\n    function hasRole(bytes32, address) external view returns (bool);\\n    function approve(address, uint256) external returns (bool);\\n    function allowance(address, address) external view returns (uint256);\\n}\",\"keccak256\":\"0x02fdf7636ff92ec0c8f53dc5f78b9e9dfac96d562cfa3bef3310d40e5bfb6767\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608034620000bd57601f620030b538819003918201601f19168301916001600160401b03831184841017620000c2578084926040948552833981010312620000bd5780516020909101516001600160a01b0381169190829003620000bd5780156200008b57600055600480546001600160a01b031916919091179055604051612fdc9081620000d98239f35b60405162461bcd60e51b815260206004820152600a60248201526904f524445525f49445f360b41b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081630cd8b022146128ff5750806315406fe5146128c65780631628bfeb1461284057806316fff074146128195780631eaa005c146127d357806320f0fc5e1461260e57806324abd3fb146125de578063281b693c1461259e578063302f81fc146123be578063472ff8bb1461215e57806349dde63f14611eb45780634acc79ed14611e2d578063527b47c014611b0c57806359a992d014611acc5780636261466114611973578063658de48a146119555780637981aa83146116c95780638251135b14611689578063836a341a14611649578063885e27501461162b5780638c23f81c14611357578063925931fc146113395780639521753e146112d15780639567dccf1461100957806396324bd414610f975780639848a68d14610f575780639c8dd2fa14610f17578063a1d54e9b14610ee8578063b71ade2f1461094c578063b81b2b711461092e578063b91ac78814610890578063db7c3f9d146101cf5763f7acbabd1461018a57600080fd5b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600360406000200154604051908152f35b600080fd5b346101ca5760203660031901126101ca5767ffffffffffffffff600435116101ca573660236004350112156101ca5767ffffffffffffffff60043560040135116101ca573660246004356004013560051b6004350101116101ca5760005b60043560040135811061023c57005b60248160051b60043501013590610142196004353603018212156101ca57600460206001600160a01b03825416604051928380926312d43a5160e01b82525afa908115610884576102a1916001600160a01b0391600091610855575b50163314612c4e565b60c48260043501013515158061082f575b6102bb90612cad565b600360a48360043501013510156101ca57600260a48360043501013514801590610809575b6102e990612cf8565b61010482600435010135600052600660205261030e6002604060002001541515612d43565b6101248260043501013560005260076020526103336001604060002001541515612d8e565b6020610346600435840160240180612dd9565b91908260405193849283378101600881520301902060ff61038060449261037a848760043501016024886004350101612dd9565b90612e0c565b54166107c55760015460009081526005602052604090206103a8600435850160240180612dd9565b9067ffffffffffffffff82116106f8576103c28354612b04565b601f8111610781575b5090600091601f82116001146107195791819260009261070e575b50508160011b916000199060031b1c19161781555b61040f600435850180840190602401612dd9565b9067ffffffffffffffff82116106f85761042c6001840154612b04565b601f81116106b1575b50600090601f831160011461061557936024938361060598946105fd947f3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e099860009261060a575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b036104b06064876004350101612c99565b1673ffffffffffffffffffffffffffffffffffffffff19825416179055600381016001600160a01b036104e96084876004350101612c99565b825474ffffffffffffffffffffffffffffffffffffffffff191691161760048035870160a481013560a01b60ff60a01b169290921790925560c48101359183019190915560e48101356005830155610104810135600683015561012481013560079092019190915561058f9060209061056490870180612dd9565b91908260405193849283378101600881520301902061037a8386600435010187876004350101612dd9565b600160ff198254161790556105ef6105d4600154946105ad86612e25565b6001556105c06004358201880180612dd9565b979094826004350101916004350101612dd9565b91909260405196879687526060806020890152870191612e34565b918483036040860152612e34565b0390a1612e25565b61022d565b013590508a8061047c565b6001840160005260206000209160005b601f19851681106106995750936001846105fd947f3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e0998946024986106059c98601f1981161061067f575b505050811b016001820155610494565b0135600019600384901b60f8161c191690558a808061066f565b90926020600181928686013581550194019101610625565b600184016000526020600020601f840160051c8101602085106106f1575b601f830160051c820181106106e5575050610435565b600081556001016106cf565b50806106cf565b634e487b7160e01b600052604160045260246000fd5b0135905086806103e6565b836000526020600020906000935b601f1984168510610769576001945083601f1981161061074f575b505050811b0181556103fb565b0135600019600384901b60f8161c19169055868080610742565b81810135835560209485019460019093019201610727565b836000526020600020601f840160051c8101602085106107be575b601f830160051c820181106107b25750506103cb565b6000815560010161079c565b508061079c565b6064907f504149525f414c52454144595f4c4953544544000000000000000000000000006040519162461bcd60e51b83526020600484015260136024840152820152fd5b506102e96001600160a01b036108256084856004350101612c99565b16151590506102e0565b506102bb6001600160a01b0361084b6064856004350101612c99565b16151590506102b2565b610877915060203d60201161087d575b61086f81836129d0565b810190612c2f565b85610298565b503d610865565b6040513d6000823e3d90fd5b346101ca5760203660031901126101ca57600435600052600560205261090160406000206108bd81612b3e565b906108ca60018201612b3e565b6108d660028301612be4565b91600581015461091a61090f6007600685015494015494604051988998610120808b528a0190612adf565b9088820360208a0152612adf565b946040870190612a92565b60c085015260e08401526101008301520390f35b346101ca5760003660031901126101ca576020600154604051908152f35b346101ca576003196020368201126101ca5767ffffffffffffffff600435116101ca5761012090600435360301126101ca57600460206001600160a01b03825416604051928380926312d43a5160e01b82525afa908115610884576109c4916001600160a01b0391600091610ec95750163314612c4e565b60a46004350135151580610ea5575b6109dc90612cad565b60036084600435013510156101ca5760026084600435013514801590610e81575b610a0690612cf8565b60e460043501356000526006602052610a286002604060002001541515612d43565b61010460043501356000526007602052610a4b6001604060002001541515612d8e565b60ff610a896020610a60600480350180612dd9565b91908260405193849283378101600881520301902061037a602460043501600435600401612dd9565b5416610e3d576001546000908152600560205260409020610aae600480350180612dd9565b67ffffffffffffffff81939293116106f857610aca8254612b04565b601f8111610df9575b50600092601f8211600114610d905792819293600092610d85575b50508160011b916000199060031b1c19161781555b610b17602460043501600435600401612dd9565b67ffffffffffffffff81939293116106f857610b366001830154612b04565b601f8111610d3e575b50600092601f8211600114610ccf5792819293600092610cc4575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b03610b8c604460043501612c99565b1673ffffffffffffffffffffffffffffffffffffffff19825416179055600381016001600160a01b03610bc3606460043501612c99565b1681549074ffffffffffffffffffffffffffffffffffffffffff1960ff60a01b6084600435013560a01b1692161717905560a46004350135600482015560c46004350135600582015560e46004350135600682015560076101046004350135910155610c3e6020610a60600435600401600435600401612dd9565b600160ff198254161790557f3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e09610cbf600154610c7981612e25565b600155610c8a600480350180612dd9565b92906105ef610ca3602460043501600435600401612dd9565b9190926040519687968752606060208801526060870191612e34565b0390a1005b013590508380610b5a565b600183016000526020600020906000945b601f1984168610610d2657600194955083601f19811610610d0c575b505050811b016001820155610b72565b0135600019600384901b60f8161c19169055838080610cfc565b91602060018192858501358155019301950194610ce0565b600183016000526020600020601f830160051c810160208410610d7e575b601f830160051c82018110610d72575050610b3f565b60008155600101610d5c565b5080610d5c565b013590508380610aee565b826000526020600020906000945b601f1984168610610de157600194955083601f19811610610dc7575b505050811b018155610b03565b0135600019600384901b60f8161c19169055838080610dba565b91602060018192858501358155019301950194610d9e565b826000526020600020601f830160051c810160208410610e36575b601f830160051c82018110610e2a575050610ad3565b60008155600101610e14565b5080610e14565b606460405162461bcd60e51b815260206004820152601360248201527f504149525f414c52454144595f4c4953544544000000000000000000000000006044820152fd5b50610a066001600160a01b03610e9b606460043501612c99565b16151590506109fd565b506109dc6001600160a01b03610ebf604460043501612c99565b16151590506109d3565b610ee2915060203d60201161087d5761086f81836129d0565b83610298565b346101ca5760203660031901126101ca5760043560005260056020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600460406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526006602052610ff06040600020610fc481612b3e565b90600181015490600281015490600460038201549101549160405195869560a0875260a0870190612adf565b9360208601526040850152606084015260808301520390f35b346101ca5760203660031901126101ca57600060a060405161102a81612960565b606081526060602082015261103d612f81565b60408201528260608201528260808201520152600060806040516110608161297c565b606081528260208201528260408201528260608201520152600060c060405161108881612998565b606081528260208201528260408201528260608201528260808201528260a0820152015260043560005260056020526040600020604051906110c982612960565b6110d281612b3e565b82526110e060018201612b3e565b60208301526110f160028201612be4565b6040830152600581015460608301526007600682015491826080850152015460a0830152600052600660205260406000209060a0810151600052600760205260406000206004604051936111448561297c565b61114d81612b3e565b85526001810154602086015260028101546040860152600381015460608601520154608084015260066040519161118383612998565b61118c81612b3e565b835260018101546020840152600281015460408401526003810154606084015260048101546080840152600581015460a0840152015460c08201526040519283926060845260a08151916112076111f1610120948560608a0152610180890190612adf565b6020830151888203605f190160808a0152612adf565b92611219604083015184890190612a92565b606082015190870152608081015161014087015201516101608501528381036020850152608080611253845160a0855260a0850190612adf565b936020810151602085015260408101516040850152606081015160608501520151910152828103604084015260c080611295845160e0855260e0850190612adf565b936020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015201519101520390f35b346101ca5760403660031901126101ca5760243580151581036101ca5761132360209160043560005260058352600660406000200154600052600983526040600020906000146113315760009061293a565b90546040519160031b1c8152f35b60019061293a565b346101ca5760003660031901126101ca576020600054604051908152f35b346101ca57600319602036820181136101ca5760043567ffffffffffffffff928382116101ca5760e0826004019183360301126101ca5760046001600160a01b038481835416604051938480926312d43a5160e01b82525afa8015610884576113ca9260009161160e5750163314612c4e565b60248201359182151580611601575b806115f4575b806115e7575b806115da575b806115cd575b6113fa90612f36565b6003928354600052600785526040600020956114168480612dd9565b9182116106f8576114278854612b04565b601f8111611587575b50600090601f83116001146114f4576114d394610cbf9694847f482049823c85e038e099fe4f2b901487c4800def71c9a3f5bae2de8381ec54f69b9560069560c4956000926114e9575b50508160011b91600019908c1b1c19161785555b6001850155604481013560028501556064810135888501556084810135600485015560a4810135600585015501359101558354936114cb85612e25565b905580612dd9565b6040805195869586528501526040840191612e34565b013590508d8061147a565b601f1983169189600052886000209260005b81811061157057509460018560069560c4956114d39a957f482049823c85e038e099fe4f2b901487c4800def71c9a3f5bae2de8381ec54f69f99610cbf9d9b10611558575b505050811b01855561148e565b0135600019838e1b60f8161c191690558d808061154b565b91938a600181928787013581550195019201611506565b8860005287600020601f840160051c8101918985106115c3575b601f0160051c01905b8181106115b75750611430565b600081556001016115aa565b90915081906115a1565b5060c481013515156113f1565b5060a481013515156113eb565b50608481013515156113e5565b50606481013515156113df565b50604481013515156113d9565b6116259150863d881161087d5761086f81836129d0565b87610298565b346101ca5760003660031901126101ca576020600254604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600260406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600160406000200154604051908152f35b346101ca576003196040368201126101ca57600435906024359167ffffffffffffffff918284116101ca5760a0846004019185360301126101ca576001600160a01b039283600454166040519485916312d43a5160e01b835282600460209889935afa801561088457611746926000916119385750163314612c4e565b82600052600684526117616002604060002001541515612d43565b6024850135611771811515612ea0565b604486013591600283101580611928575b8061191b575b61179190612eeb565b84600052600686526117a860406000209480612dd9565b9182116106f8576117b98554612b04565b601f81116118d5575b50600090601f83116001146118475792827fcfde8f228364c70f12cbbac5a88fc91ceca76dd750ac93364991a333b34afb8e99936004969360849660009261183c575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155604051908152a1005b013590508b80611805565b601f1983169186600052886000209260005b8181106118be5750936004969360849693600193837fcfde8f228364c70f12cbbac5a88fc91ceca76dd750ac93364991a333b34afb8e9e98106118a4575b505050811b01865561181a565b0135600019600384901b60f8161c191690558b8080611897565b91938a600181928787013581550195019201611859565b8560005287600020601f840160051c810191898510611911575b601f0160051c01905b81811061190557506117c2565b600081556001016118f8565b90915081906118ef565b5060648701358310611788565b506103e860648801351115611782565b61194f9150873d891161087d5761086f81836129d0565b88610298565b346101ca5760003660031901126101ca576020600354604051908152f35b346101ca576020806003193601126101ca5760043560005260058152600660406000200154600052600681526004604060002001546001600160a01b039060048383825416604051928380927ffbfa77cf0000000000000000000000000000000000000000000000000000000082525afa8015610884578491600091611a94575b506004604051809581937f0851a202000000000000000000000000000000000000000000000000000000008352165afa91821561088457600092611a65575b50818102918183041490151715611a4f57606460405191048152f35b634e487b7160e01b600052601160045260246000fd5b9091508281813d8311611a8d575b611a7d81836129d0565b810103126101ca57519083611a33565b503d611a73565b82819392503d8311611ac5575b611aab81836129d0565b810103126101ca575182811681036101ca578390856119f4565b503d611aa1565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600260406000200154604051908152f35b346101ca576003196040368201126101ca5767ffffffffffffffff602435116101ca5761012090602435360301126101ca57600460206001600160a01b03825416604051928380926312d43a5160e01b82525afa90811561088457611b84916001600160a01b0391600091610ec95750163314612c4e565b60a46024350135151580611e09575b611b9c90612cad565b60036084602435013510156101ca5760026084602435013514801590611de5575b611bc690612cf8565b61010460243501356000526007602052611be96001604060002001541515612d8e565b60043560005260056020526040600020604051600081835491611c0b83612b04565b9260018116908115611dce5750600114611d93575b602092506008815203019020604051906000906001840154611c4181612b04565b9060018116908115611d7d5750600114611d43575b508152819003602001902054611c6e9060ff16612e55565b600281016001600160a01b03611c88604460243501612c99565b1673ffffffffffffffffffffffffffffffffffffffff19825416179055600381016001600160a01b03611cbf606460243501612c99565b1681549074ffffffffffffffffffffffffffffffffffffffffff1960ff60a01b6084602435013560a01b1692161717905560a46024350135600482015560c460243501356005820155600761010460243501359101557f123a1b961ae93e7acda9790b318237b175b45ac09277cd3614305d8baa3f195360206040516004358152a1005b9091506001840160005260206000206000905b828210611d695750508201906020611c56565b600181602092548488015201910190611d56565b60ff191685525080151502830191506020611c56565b5050826000528160206000206000905b838210611db65750506020918101611c20565b60209192508060019154848701520191018391611da3565b60ff19168352506020928015150282019050611c20565b50611bc66001600160a01b03611dff606460243501612c99565b1615159050611bbd565b50611b9c6001600160a01b03611e23604460243501612c99565b1615159050611b93565b346101ca5760203660031901126101ca576004356000526007602052611e916040600020611e5a81612b3e565b906001810154906002810154906003810154600482015490600660058401549301549360405197889760e0895260e0890190612adf565b95602088015260408701526060860152608085015260a084015260c08301520390f35b346101ca576003196040368201126101ca57600435906024359167ffffffffffffffff918284116101ca5760e0846004019185360301126101ca576001600160a01b039283600454166040519485916312d43a5160e01b835282600460209889935afa801561088457611f31926000916119385750163314612c4e565b82600052600784526001611f4d81604060002001541515612d8e565b60248601359182151580612151575b80612144575b80612137575b8061212a575b8061211d575b611f7d90612f36565b8460005260078652611f9460406000209480612dd9565b9182116106f857611fa58554612b04565b601f81116120d4575b50600090601f83116001146120495792827f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7699936006969360c49660009261203e575b5050600019600383901b1c191690821b1786555b85015560448101356002850155606481013560038501556084810135600485015560a481013560058501550135910155604051908152a1005b013590508b80611ff1565b601f1983169186600052886000209260005b8181106120bf57509360069693869360c49793837f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769e98106120a5575b505050811b018655612005565b0135600019600384901b60f8161c191690558b8080612098565b83830135855593860193918a01918a0161205b565b8560005287600020601f840160051c810191898510612113575b601f0160051c019084905b828110612107575050611fae565b600081550184906120f9565b90915081906120ee565b5060c48701351515611f74565b5060a48701351515611f6e565b5060848701351515611f68565b5060648701351515611f62565b5060448701351515611f5c565b346101ca57600319602036820181136101ca576004359167ffffffffffffffff8084116101ca5760a0846004019285360301126101ca5760046001600160a01b038481835416604051938480926312d43a5160e01b82525afa8015610884576121d19260009161160e5750163314612c4e565b60248401356121e1811515612ea0565b6044850135906002821015806123ae575b806123a1575b61220190612eeb565b6002546000526006855260406000209261221b8580612dd9565b9182116106f85761222c8554612b04565b601f811161235b575b50600090601f83116001146122cd5792827faf17de8e82beccc440012117a600dc37e26925225d0f1ee192fc107eb3dcbca49993600496936084966000926122c2575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155610cbf6114d3600254926122b984612e25565b60025580612dd9565b013590508b80612278565b601f1983169186600052886000209260005b8181106123445750936004969360849693600193837faf17de8e82beccc440012117a600dc37e26925225d0f1ee192fc107eb3dcbca49e981061232a575b505050811b01865561228d565b0135600019600384901b60f8161c191690558b808061231d565b91938a6001819287870135815501950192016122df565b8560005287600020601f840160051c810191898510612397575b601f0160051c01905b81811061238b5750612235565b6000815560010161237e565b9091508190612375565b50606486013582106121f8565b506103e8606487013511156121f2565b346101ca576020806003193601126101ca576001600160a01b0360048282825416604051928380927f3078fff50000000000000000000000000000000000000000000000000000000082525afa90811561088457600091612568575b501633036125245761250890600435600052600581526040600020906040519161244383612960565b61244c81612b3e565b835261245a60018201612b3e565b9282810193845261246d60028301612be4565b604082015260058201546060820152600760068301549260808301938452015460a08201526124cb60ff6124c46124b38685518160405193828580945193849201612a49565b810160088152030190208751612a6c565b5416612e55565b51925190516000526006825261251560016040600020015492600054926124f184612e25565b600055604051968796608088526080880190612adf565b9186830390870152612adf565b91604084015260608301520390f35b6064906040519062461bcd60e51b82526004820152600f60248201527f41474752454741544f525f4f4e4c5900000000000000000000000000000000006044820152fd5b90508281813d8311612597575b61257f81836129d0565b810103126101ca575181811681036101ca578361241a565b503d612575565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600360406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526005602052602060066040600020015415604051908152f35b346101ca5760803660031901126101ca5760243560443580151581036101ca576064359081151582036101ca576001600160a01b0380600454169060405180927eb1278300000000000000000000000000000000000000000000000000000000825281600460209586935afa908115610884576000916127b6575b501633036127725760099060043560005260058152600660406000200154600052526040600020906000146127695760ff60005b1691156126fb57906126ce9161293a565b819291548160031b1c918201809211611a4f57825460001960039290921b91821b191691901b179055005b005b909180612708848461293a565b90549060031b1c1160001461275957612721838361293a565b90549060031b1c908103908111611a4f576126f992612740919261293a565b90919082549060031b91821b91600019901b1916179055565b506127406126f99260009261293a565b60ff60016126bd565b6064906040519062461bcd60e51b82526004820152600e60248201527f43414c4c4241434b535f4f4e4c590000000000000000000000000000000000006044820152fd5b6127cd9150833d851161087d5761086f81836129d0565b86612689565b346101ca5760203660031901126101ca576127ec612f81565b506004356000526005602052608061280a6002604060002001612be4565b6128176040518092612a92565bf35b346101ca5760003660031901126101ca5760206001600160a01b0360045416604051908152f35b346101ca5760403660031901126101ca5767ffffffffffffffff6004358181116101ca576128729036906004016129f2565b6024359182116101ca576128ba60ff916128aa6020612896819636906004016129f2565b928160405193828580945193849201612a49565b8101600881520301902090612a6c565b54166040519015158152f35b346101ca5760403660031901126101ca576024356004356000526009602052604060002060028210156101ca576020916113239161293a565b346101ca5760203660031901126101ca5760209060043560005260058252600760406000200154600052600782526006604060002001548152f35b600282101561294a570190600090565b634e487b7160e01b600052603260045260246000fd5b60c0810190811067ffffffffffffffff8211176106f857604052565b60a0810190811067ffffffffffffffff8211176106f857604052565b60e0810190811067ffffffffffffffff8211176106f857604052565b6080810190811067ffffffffffffffff8211176106f857604052565b90601f8019910116810190811067ffffffffffffffff8211176106f857604052565b81601f820112156101ca5780359067ffffffffffffffff82116106f85760405192612a27601f8401601f1916602001856129d0565b828452602083830101116101ca57816000926020809301838601378301015290565b60005b838110612a5c5750506000910152565b8181015183820152602001612a4c565b602090612a86928260405194838680955193849201612a49565b82019081520301902090565b6001600160a01b03808251168352602082015116602083015260408101516003811015612ac9576040830152606090810151910152565b634e487b7160e01b600052602160045260246000fd5b90602091612af881518092818552858086019101612a49565b601f01601f1916010190565b90600182811c92168015612b34575b6020831014612b1e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612b13565b9060405191826000825492612b5284612b04565b908184526001948581169081600014612bc15750600114612b7e575b5050612b7c925003836129d0565b565b9093915060005260209081600020936000915b818310612ba9575050612b7c93508201013880612b6e565b85548884018501529485019487945091830191612b91565b915050612b7c94506020925060ff191682840152151560051b8201013880612b6e565b90604051612bf1816129b4565b809260ff6001600160a01b038083541684526001830154908116602085015260a01c166003811015612ac95760609160029160408501520154910152565b908160209103126101ca57516001600160a01b03811681036101ca5790565b15612c5557565b606460405162461bcd60e51b815260206004820152600860248201527f474f565f4f4e4c590000000000000000000000000000000000000000000000006044820152fd5b356001600160a01b03811681036101ca5790565b15612cb457565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46454544000000000000000000000000000000000000000000006044820152fd5b15612cff57565b606460405162461bcd60e51b815260206004820152600e60248201527f464545445f325f4d495353494e470000000000000000000000000000000000006044820152fd5b15612d4a57565b606460405162461bcd60e51b815260206004820152601060248201527f47524f55505f4e4f545f4c4953544544000000000000000000000000000000006044820152fd5b15612d9557565b606460405162461bcd60e51b815260206004820152600e60248201527f4645455f4e4f545f4c49535445440000000000000000000000000000000000006044820152fd5b903590601e19813603018212156101ca570180359067ffffffffffffffff82116101ca576020019181360383136101ca57565b6020919283604051948593843782019081520301902090565b6000198114611a4f5760010190565b908060209392818452848401376000828201840152601f01601f1916010190565b15612e5c57565b606460405162461bcd60e51b815260206004820152600f60248201527f504149525f4e4f545f4c495354454400000000000000000000000000000000006044820152fd5b15612ea757565b606460405162461bcd60e51b815260206004820152600960248201527f4a4f425f454d50545900000000000000000000000000000000000000000000006044820152fd5b15612ef257565b606460405162461bcd60e51b815260206004820152600f60248201527f57524f4e475f4c455645524147455300000000000000000000000000000000006044820152fd5b15612f3d57565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46454553000000000000000000000000000000000000000000006044820152fd5b60405190612f8e826129b4565b6000606083828152826020820152826040820152015256fea2646970667358221220527b37f5d3eaabbf0d0550495314b854c62e6375243a1e466de55cc3b2b0447964736f6c63430008140033",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b60003560e01c9081630cd8b022146128ff5750806315406fe5146128c65780631628bfeb1461284057806316fff074146128195780631eaa005c146127d357806320f0fc5e1461260e57806324abd3fb146125de578063281b693c1461259e578063302f81fc146123be578063472ff8bb1461215e57806349dde63f14611eb45780634acc79ed14611e2d578063527b47c014611b0c57806359a992d014611acc5780636261466114611973578063658de48a146119555780637981aa83146116c95780638251135b14611689578063836a341a14611649578063885e27501461162b5780638c23f81c14611357578063925931fc146113395780639521753e146112d15780639567dccf1461100957806396324bd414610f975780639848a68d14610f575780639c8dd2fa14610f17578063a1d54e9b14610ee8578063b71ade2f1461094c578063b81b2b711461092e578063b91ac78814610890578063db7c3f9d146101cf5763f7acbabd1461018a57600080fd5b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600360406000200154604051908152f35b600080fd5b346101ca5760203660031901126101ca5767ffffffffffffffff600435116101ca573660236004350112156101ca5767ffffffffffffffff60043560040135116101ca573660246004356004013560051b6004350101116101ca5760005b60043560040135811061023c57005b60248160051b60043501013590610142196004353603018212156101ca57600460206001600160a01b03825416604051928380926312d43a5160e01b82525afa908115610884576102a1916001600160a01b0391600091610855575b50163314612c4e565b60c48260043501013515158061082f575b6102bb90612cad565b600360a48360043501013510156101ca57600260a48360043501013514801590610809575b6102e990612cf8565b61010482600435010135600052600660205261030e6002604060002001541515612d43565b6101248260043501013560005260076020526103336001604060002001541515612d8e565b6020610346600435840160240180612dd9565b91908260405193849283378101600881520301902060ff61038060449261037a848760043501016024886004350101612dd9565b90612e0c565b54166107c55760015460009081526005602052604090206103a8600435850160240180612dd9565b9067ffffffffffffffff82116106f8576103c28354612b04565b601f8111610781575b5090600091601f82116001146107195791819260009261070e575b50508160011b916000199060031b1c19161781555b61040f600435850180840190602401612dd9565b9067ffffffffffffffff82116106f85761042c6001840154612b04565b601f81116106b1575b50600090601f831160011461061557936024938361060598946105fd947f3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e099860009261060a575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b036104b06064876004350101612c99565b1673ffffffffffffffffffffffffffffffffffffffff19825416179055600381016001600160a01b036104e96084876004350101612c99565b825474ffffffffffffffffffffffffffffffffffffffffff191691161760048035870160a481013560a01b60ff60a01b169290921790925560c48101359183019190915560e48101356005830155610104810135600683015561012481013560079092019190915561058f9060209061056490870180612dd9565b91908260405193849283378101600881520301902061037a8386600435010187876004350101612dd9565b600160ff198254161790556105ef6105d4600154946105ad86612e25565b6001556105c06004358201880180612dd9565b979094826004350101916004350101612dd9565b91909260405196879687526060806020890152870191612e34565b918483036040860152612e34565b0390a1612e25565b61022d565b013590508a8061047c565b6001840160005260206000209160005b601f19851681106106995750936001846105fd947f3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e0998946024986106059c98601f1981161061067f575b505050811b016001820155610494565b0135600019600384901b60f8161c191690558a808061066f565b90926020600181928686013581550194019101610625565b600184016000526020600020601f840160051c8101602085106106f1575b601f830160051c820181106106e5575050610435565b600081556001016106cf565b50806106cf565b634e487b7160e01b600052604160045260246000fd5b0135905086806103e6565b836000526020600020906000935b601f1984168510610769576001945083601f1981161061074f575b505050811b0181556103fb565b0135600019600384901b60f8161c19169055868080610742565b81810135835560209485019460019093019201610727565b836000526020600020601f840160051c8101602085106107be575b601f830160051c820181106107b25750506103cb565b6000815560010161079c565b508061079c565b6064907f504149525f414c52454144595f4c4953544544000000000000000000000000006040519162461bcd60e51b83526020600484015260136024840152820152fd5b506102e96001600160a01b036108256084856004350101612c99565b16151590506102e0565b506102bb6001600160a01b0361084b6064856004350101612c99565b16151590506102b2565b610877915060203d60201161087d575b61086f81836129d0565b810190612c2f565b85610298565b503d610865565b6040513d6000823e3d90fd5b346101ca5760203660031901126101ca57600435600052600560205261090160406000206108bd81612b3e565b906108ca60018201612b3e565b6108d660028301612be4565b91600581015461091a61090f6007600685015494015494604051988998610120808b528a0190612adf565b9088820360208a0152612adf565b946040870190612a92565b60c085015260e08401526101008301520390f35b346101ca5760003660031901126101ca576020600154604051908152f35b346101ca576003196020368201126101ca5767ffffffffffffffff600435116101ca5761012090600435360301126101ca57600460206001600160a01b03825416604051928380926312d43a5160e01b82525afa908115610884576109c4916001600160a01b0391600091610ec95750163314612c4e565b60a46004350135151580610ea5575b6109dc90612cad565b60036084600435013510156101ca5760026084600435013514801590610e81575b610a0690612cf8565b60e460043501356000526006602052610a286002604060002001541515612d43565b61010460043501356000526007602052610a4b6001604060002001541515612d8e565b60ff610a896020610a60600480350180612dd9565b91908260405193849283378101600881520301902061037a602460043501600435600401612dd9565b5416610e3d576001546000908152600560205260409020610aae600480350180612dd9565b67ffffffffffffffff81939293116106f857610aca8254612b04565b601f8111610df9575b50600092601f8211600114610d905792819293600092610d85575b50508160011b916000199060031b1c19161781555b610b17602460043501600435600401612dd9565b67ffffffffffffffff81939293116106f857610b366001830154612b04565b601f8111610d3e575b50600092601f8211600114610ccf5792819293600092610cc4575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b03610b8c604460043501612c99565b1673ffffffffffffffffffffffffffffffffffffffff19825416179055600381016001600160a01b03610bc3606460043501612c99565b1681549074ffffffffffffffffffffffffffffffffffffffffff1960ff60a01b6084600435013560a01b1692161717905560a46004350135600482015560c46004350135600582015560e46004350135600682015560076101046004350135910155610c3e6020610a60600435600401600435600401612dd9565b600160ff198254161790557f3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e09610cbf600154610c7981612e25565b600155610c8a600480350180612dd9565b92906105ef610ca3602460043501600435600401612dd9565b9190926040519687968752606060208801526060870191612e34565b0390a1005b013590508380610b5a565b600183016000526020600020906000945b601f1984168610610d2657600194955083601f19811610610d0c575b505050811b016001820155610b72565b0135600019600384901b60f8161c19169055838080610cfc565b91602060018192858501358155019301950194610ce0565b600183016000526020600020601f830160051c810160208410610d7e575b601f830160051c82018110610d72575050610b3f565b60008155600101610d5c565b5080610d5c565b013590508380610aee565b826000526020600020906000945b601f1984168610610de157600194955083601f19811610610dc7575b505050811b018155610b03565b0135600019600384901b60f8161c19169055838080610dba565b91602060018192858501358155019301950194610d9e565b826000526020600020601f830160051c810160208410610e36575b601f830160051c82018110610e2a575050610ad3565b60008155600101610e14565b5080610e14565b606460405162461bcd60e51b815260206004820152601360248201527f504149525f414c52454144595f4c4953544544000000000000000000000000006044820152fd5b50610a066001600160a01b03610e9b606460043501612c99565b16151590506109fd565b506109dc6001600160a01b03610ebf604460043501612c99565b16151590506109d3565b610ee2915060203d60201161087d5761086f81836129d0565b83610298565b346101ca5760203660031901126101ca5760043560005260056020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600460406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526006602052610ff06040600020610fc481612b3e565b90600181015490600281015490600460038201549101549160405195869560a0875260a0870190612adf565b9360208601526040850152606084015260808301520390f35b346101ca5760203660031901126101ca57600060a060405161102a81612960565b606081526060602082015261103d612f81565b60408201528260608201528260808201520152600060806040516110608161297c565b606081528260208201528260408201528260608201520152600060c060405161108881612998565b606081528260208201528260408201528260608201528260808201528260a0820152015260043560005260056020526040600020604051906110c982612960565b6110d281612b3e565b82526110e060018201612b3e565b60208301526110f160028201612be4565b6040830152600581015460608301526007600682015491826080850152015460a0830152600052600660205260406000209060a0810151600052600760205260406000206004604051936111448561297c565b61114d81612b3e565b85526001810154602086015260028101546040860152600381015460608601520154608084015260066040519161118383612998565b61118c81612b3e565b835260018101546020840152600281015460408401526003810154606084015260048101546080840152600581015460a0840152015460c08201526040519283926060845260a08151916112076111f1610120948560608a0152610180890190612adf565b6020830151888203605f190160808a0152612adf565b92611219604083015184890190612a92565b606082015190870152608081015161014087015201516101608501528381036020850152608080611253845160a0855260a0850190612adf565b936020810151602085015260408101516040850152606081015160608501520151910152828103604084015260c080611295845160e0855260e0850190612adf565b936020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015201519101520390f35b346101ca5760403660031901126101ca5760243580151581036101ca5761132360209160043560005260058352600660406000200154600052600983526040600020906000146113315760009061293a565b90546040519160031b1c8152f35b60019061293a565b346101ca5760003660031901126101ca576020600054604051908152f35b346101ca57600319602036820181136101ca5760043567ffffffffffffffff928382116101ca5760e0826004019183360301126101ca5760046001600160a01b038481835416604051938480926312d43a5160e01b82525afa8015610884576113ca9260009161160e5750163314612c4e565b60248201359182151580611601575b806115f4575b806115e7575b806115da575b806115cd575b6113fa90612f36565b6003928354600052600785526040600020956114168480612dd9565b9182116106f8576114278854612b04565b601f8111611587575b50600090601f83116001146114f4576114d394610cbf9694847f482049823c85e038e099fe4f2b901487c4800def71c9a3f5bae2de8381ec54f69b9560069560c4956000926114e9575b50508160011b91600019908c1b1c19161785555b6001850155604481013560028501556064810135888501556084810135600485015560a4810135600585015501359101558354936114cb85612e25565b905580612dd9565b6040805195869586528501526040840191612e34565b013590508d8061147a565b601f1983169189600052886000209260005b81811061157057509460018560069560c4956114d39a957f482049823c85e038e099fe4f2b901487c4800def71c9a3f5bae2de8381ec54f69f99610cbf9d9b10611558575b505050811b01855561148e565b0135600019838e1b60f8161c191690558d808061154b565b91938a600181928787013581550195019201611506565b8860005287600020601f840160051c8101918985106115c3575b601f0160051c01905b8181106115b75750611430565b600081556001016115aa565b90915081906115a1565b5060c481013515156113f1565b5060a481013515156113eb565b50608481013515156113e5565b50606481013515156113df565b50604481013515156113d9565b6116259150863d881161087d5761086f81836129d0565b87610298565b346101ca5760003660031901126101ca576020600254604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600260406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600160406000200154604051908152f35b346101ca576003196040368201126101ca57600435906024359167ffffffffffffffff918284116101ca5760a0846004019185360301126101ca576001600160a01b039283600454166040519485916312d43a5160e01b835282600460209889935afa801561088457611746926000916119385750163314612c4e565b82600052600684526117616002604060002001541515612d43565b6024850135611771811515612ea0565b604486013591600283101580611928575b8061191b575b61179190612eeb565b84600052600686526117a860406000209480612dd9565b9182116106f8576117b98554612b04565b601f81116118d5575b50600090601f83116001146118475792827fcfde8f228364c70f12cbbac5a88fc91ceca76dd750ac93364991a333b34afb8e99936004969360849660009261183c575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155604051908152a1005b013590508b80611805565b601f1983169186600052886000209260005b8181106118be5750936004969360849693600193837fcfde8f228364c70f12cbbac5a88fc91ceca76dd750ac93364991a333b34afb8e9e98106118a4575b505050811b01865561181a565b0135600019600384901b60f8161c191690558b8080611897565b91938a600181928787013581550195019201611859565b8560005287600020601f840160051c810191898510611911575b601f0160051c01905b81811061190557506117c2565b600081556001016118f8565b90915081906118ef565b5060648701358310611788565b506103e860648801351115611782565b61194f9150873d891161087d5761086f81836129d0565b88610298565b346101ca5760003660031901126101ca576020600354604051908152f35b346101ca576020806003193601126101ca5760043560005260058152600660406000200154600052600681526004604060002001546001600160a01b039060048383825416604051928380927ffbfa77cf0000000000000000000000000000000000000000000000000000000082525afa8015610884578491600091611a94575b506004604051809581937f0851a202000000000000000000000000000000000000000000000000000000008352165afa91821561088457600092611a65575b50818102918183041490151715611a4f57606460405191048152f35b634e487b7160e01b600052601160045260246000fd5b9091508281813d8311611a8d575b611a7d81836129d0565b810103126101ca57519083611a33565b503d611a73565b82819392503d8311611ac5575b611aab81836129d0565b810103126101ca575182811681036101ca578390856119f4565b503d611aa1565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600260406000200154604051908152f35b346101ca576003196040368201126101ca5767ffffffffffffffff602435116101ca5761012090602435360301126101ca57600460206001600160a01b03825416604051928380926312d43a5160e01b82525afa90811561088457611b84916001600160a01b0391600091610ec95750163314612c4e565b60a46024350135151580611e09575b611b9c90612cad565b60036084602435013510156101ca5760026084602435013514801590611de5575b611bc690612cf8565b61010460243501356000526007602052611be96001604060002001541515612d8e565b60043560005260056020526040600020604051600081835491611c0b83612b04565b9260018116908115611dce5750600114611d93575b602092506008815203019020604051906000906001840154611c4181612b04565b9060018116908115611d7d5750600114611d43575b508152819003602001902054611c6e9060ff16612e55565b600281016001600160a01b03611c88604460243501612c99565b1673ffffffffffffffffffffffffffffffffffffffff19825416179055600381016001600160a01b03611cbf606460243501612c99565b1681549074ffffffffffffffffffffffffffffffffffffffffff1960ff60a01b6084602435013560a01b1692161717905560a46024350135600482015560c460243501356005820155600761010460243501359101557f123a1b961ae93e7acda9790b318237b175b45ac09277cd3614305d8baa3f195360206040516004358152a1005b9091506001840160005260206000206000905b828210611d695750508201906020611c56565b600181602092548488015201910190611d56565b60ff191685525080151502830191506020611c56565b5050826000528160206000206000905b838210611db65750506020918101611c20565b60209192508060019154848701520191018391611da3565b60ff19168352506020928015150282019050611c20565b50611bc66001600160a01b03611dff606460243501612c99565b1615159050611bbd565b50611b9c6001600160a01b03611e23604460243501612c99565b1615159050611b93565b346101ca5760203660031901126101ca576004356000526007602052611e916040600020611e5a81612b3e565b906001810154906002810154906003810154600482015490600660058401549301549360405197889760e0895260e0890190612adf565b95602088015260408701526060860152608085015260a084015260c08301520390f35b346101ca576003196040368201126101ca57600435906024359167ffffffffffffffff918284116101ca5760e0846004019185360301126101ca576001600160a01b039283600454166040519485916312d43a5160e01b835282600460209889935afa801561088457611f31926000916119385750163314612c4e565b82600052600784526001611f4d81604060002001541515612d8e565b60248601359182151580612151575b80612144575b80612137575b8061212a575b8061211d575b611f7d90612f36565b8460005260078652611f9460406000209480612dd9565b9182116106f857611fa58554612b04565b601f81116120d4575b50600090601f83116001146120495792827f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c7699936006969360c49660009261203e575b5050600019600383901b1c191690821b1786555b85015560448101356002850155606481013560038501556084810135600485015560a481013560058501550135910155604051908152a1005b013590508b80611ff1565b601f1983169186600052886000209260005b8181106120bf57509360069693869360c49793837f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769e98106120a5575b505050811b018655612005565b0135600019600384901b60f8161c191690558b8080612098565b83830135855593860193918a01918a0161205b565b8560005287600020601f840160051c810191898510612113575b601f0160051c019084905b828110612107575050611fae565b600081550184906120f9565b90915081906120ee565b5060c48701351515611f74565b5060a48701351515611f6e565b5060848701351515611f68565b5060648701351515611f62565b5060448701351515611f5c565b346101ca57600319602036820181136101ca576004359167ffffffffffffffff8084116101ca5760a0846004019285360301126101ca5760046001600160a01b038481835416604051938480926312d43a5160e01b82525afa8015610884576121d19260009161160e5750163314612c4e565b60248401356121e1811515612ea0565b6044850135906002821015806123ae575b806123a1575b61220190612eeb565b6002546000526006855260406000209261221b8580612dd9565b9182116106f85761222c8554612b04565b601f811161235b575b50600090601f83116001146122cd5792827faf17de8e82beccc440012117a600dc37e26925225d0f1ee192fc107eb3dcbca49993600496936084966000926122c2575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155610cbf6114d3600254926122b984612e25565b60025580612dd9565b013590508b80612278565b601f1983169186600052886000209260005b8181106123445750936004969360849693600193837faf17de8e82beccc440012117a600dc37e26925225d0f1ee192fc107eb3dcbca49e981061232a575b505050811b01865561228d565b0135600019600384901b60f8161c191690558b808061231d565b91938a6001819287870135815501950192016122df565b8560005287600020601f840160051c810191898510612397575b601f0160051c01905b81811061238b5750612235565b6000815560010161237e565b9091508190612375565b50606486013582106121f8565b506103e8606487013511156121f2565b346101ca576020806003193601126101ca576001600160a01b0360048282825416604051928380927f3078fff50000000000000000000000000000000000000000000000000000000082525afa90811561088457600091612568575b501633036125245761250890600435600052600581526040600020906040519161244383612960565b61244c81612b3e565b835261245a60018201612b3e565b9282810193845261246d60028301612be4565b604082015260058201546060820152600760068301549260808301938452015460a08201526124cb60ff6124c46124b38685518160405193828580945193849201612a49565b810160088152030190208751612a6c565b5416612e55565b51925190516000526006825261251560016040600020015492600054926124f184612e25565b600055604051968796608088526080880190612adf565b9186830390870152612adf565b91604084015260608301520390f35b6064906040519062461bcd60e51b82526004820152600f60248201527f41474752454741544f525f4f4e4c5900000000000000000000000000000000006044820152fd5b90508281813d8311612597575b61257f81836129d0565b810103126101ca575181811681036101ca578361241a565b503d612575565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600360406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526005602052602060066040600020015415604051908152f35b346101ca5760803660031901126101ca5760243560443580151581036101ca576064359081151582036101ca576001600160a01b0380600454169060405180927eb1278300000000000000000000000000000000000000000000000000000000825281600460209586935afa908115610884576000916127b6575b501633036127725760099060043560005260058152600660406000200154600052526040600020906000146127695760ff60005b1691156126fb57906126ce9161293a565b819291548160031b1c918201809211611a4f57825460001960039290921b91821b191691901b179055005b005b909180612708848461293a565b90549060031b1c1160001461275957612721838361293a565b90549060031b1c908103908111611a4f576126f992612740919261293a565b90919082549060031b91821b91600019901b1916179055565b506127406126f99260009261293a565b60ff60016126bd565b6064906040519062461bcd60e51b82526004820152600e60248201527f43414c4c4241434b535f4f4e4c590000000000000000000000000000000000006044820152fd5b6127cd9150833d851161087d5761086f81836129d0565b86612689565b346101ca5760203660031901126101ca576127ec612f81565b506004356000526005602052608061280a6002604060002001612be4565b6128176040518092612a92565bf35b346101ca5760003660031901126101ca5760206001600160a01b0360045416604051908152f35b346101ca5760403660031901126101ca5767ffffffffffffffff6004358181116101ca576128729036906004016129f2565b6024359182116101ca576128ba60ff916128aa6020612896819636906004016129f2565b928160405193828580945193849201612a49565b8101600881520301902090612a6c565b54166040519015158152f35b346101ca5760403660031901126101ca576024356004356000526009602052604060002060028210156101ca576020916113239161293a565b346101ca5760203660031901126101ca5760209060043560005260058252600760406000200154600052600782526006604060002001548152f35b600282101561294a570190600090565b634e487b7160e01b600052603260045260246000fd5b60c0810190811067ffffffffffffffff8211176106f857604052565b60a0810190811067ffffffffffffffff8211176106f857604052565b60e0810190811067ffffffffffffffff8211176106f857604052565b6080810190811067ffffffffffffffff8211176106f857604052565b90601f8019910116810190811067ffffffffffffffff8211176106f857604052565b81601f820112156101ca5780359067ffffffffffffffff82116106f85760405192612a27601f8401601f1916602001856129d0565b828452602083830101116101ca57816000926020809301838601378301015290565b60005b838110612a5c5750506000910152565b8181015183820152602001612a4c565b602090612a86928260405194838680955193849201612a49565b82019081520301902090565b6001600160a01b03808251168352602082015116602083015260408101516003811015612ac9576040830152606090810151910152565b634e487b7160e01b600052602160045260246000fd5b90602091612af881518092818552858086019101612a49565b601f01601f1916010190565b90600182811c92168015612b34575b6020831014612b1e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612b13565b9060405191826000825492612b5284612b04565b908184526001948581169081600014612bc15750600114612b7e575b5050612b7c925003836129d0565b565b9093915060005260209081600020936000915b818310612ba9575050612b7c93508201013880612b6e565b85548884018501529485019487945091830191612b91565b915050612b7c94506020925060ff191682840152151560051b8201013880612b6e565b90604051612bf1816129b4565b809260ff6001600160a01b038083541684526001830154908116602085015260a01c166003811015612ac95760609160029160408501520154910152565b908160209103126101ca57516001600160a01b03811681036101ca5790565b15612c5557565b606460405162461bcd60e51b815260206004820152600860248201527f474f565f4f4e4c590000000000000000000000000000000000000000000000006044820152fd5b356001600160a01b03811681036101ca5790565b15612cb457565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46454544000000000000000000000000000000000000000000006044820152fd5b15612cff57565b606460405162461bcd60e51b815260206004820152600e60248201527f464545445f325f4d495353494e470000000000000000000000000000000000006044820152fd5b15612d4a57565b606460405162461bcd60e51b815260206004820152601060248201527f47524f55505f4e4f545f4c4953544544000000000000000000000000000000006044820152fd5b15612d9557565b606460405162461bcd60e51b815260206004820152600e60248201527f4645455f4e4f545f4c49535445440000000000000000000000000000000000006044820152fd5b903590601e19813603018212156101ca570180359067ffffffffffffffff82116101ca576020019181360383136101ca57565b6020919283604051948593843782019081520301902090565b6000198114611a4f5760010190565b908060209392818452848401376000828201840152601f01601f1916010190565b15612e5c57565b606460405162461bcd60e51b815260206004820152600f60248201527f504149525f4e4f545f4c495354454400000000000000000000000000000000006044820152fd5b15612ea757565b606460405162461bcd60e51b815260206004820152600960248201527f4a4f425f454d50545900000000000000000000000000000000000000000000006044820152fd5b15612ef257565b606460405162461bcd60e51b815260206004820152600f60248201527f57524f4e475f4c455645524147455300000000000000000000000000000000006044820152fd5b15612f3d57565b606460405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46454553000000000000000000000000000000000000000000006044820152fd5b60405190612f8e826129b4565b6000606083828152826020820152826040820152015256fea2646970667358221220527b37f5d3eaabbf0d0550495314b854c62e6375243a1e466de55cc3b2b0447964736f6c63430008140033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13697,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "currentOrderId",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 13699,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "pairsCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 13701,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "groupsCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 13703,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "feesCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 13706,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "storageT",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(StorageInterfaceV5)21703"
      },
      {
        "astId": 13711,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "pairs",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Pair)13669_storage)"
      },
      {
        "astId": 13716,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "groups",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Group)13680_storage)"
      },
      {
        "astId": 13721,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "fees",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Fee)13695_storage)"
      },
      {
        "astId": 13727,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "isPairListed",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))"
      },
      {
        "astId": 13733,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "groupsCollaterals",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_array(t_uint256)2_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)2_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[2]",
        "numberOfBytes": "64"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(StorageInterfaceV5)21703": {
        "encoding": "inplace",
        "label": "contract StorageInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_enum(FeedCalculation)13645": {
        "encoding": "inplace",
        "label": "enum GNSPairsStorageV6.FeedCalculation",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(string => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[2])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)2_storage"
      },
      "t_mapping(t_uint256,t_struct(Fee)13695_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairsStorageV6.Fee)",
        "numberOfBytes": "32",
        "value": "t_struct(Fee)13695_storage"
      },
      "t_mapping(t_uint256,t_struct(Group)13680_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairsStorageV6.Group)",
        "numberOfBytes": "32",
        "value": "t_struct(Group)13680_storage"
      },
      "t_mapping(t_uint256,t_struct(Pair)13669_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairsStorageV6.Pair)",
        "numberOfBytes": "32",
        "value": "t_struct(Pair)13669_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Fee)13695_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Fee",
        "members": [
          {
            "astId": 13682,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 13684,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "openFeeP",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 13686,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "closeFeeP",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 13688,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "oracleFeeP",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 13690,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "nftLimitOrderFeeP",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 13692,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "referralFeeP",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 13694,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "minLevPosDai",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Feed)13655_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Feed",
        "members": [
          {
            "astId": 13647,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feed1",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 13649,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feed2",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 13652,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feedCalculation",
            "offset": 20,
            "slot": "1",
            "type": "t_enum(FeedCalculation)13645"
          },
          {
            "astId": 13654,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "maxDeviationP",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Group)13680_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Group",
        "members": [
          {
            "astId": 13671,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 13673,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "job",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 13675,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "minLeverage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 13677,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "maxLeverage",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 13679,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "maxCollateralP",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Pair)13669_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Pair",
        "members": [
          {
            "astId": 13657,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 13659,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "to",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 13662,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feed",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Feed)13655_storage"
          },
          {
            "astId": 13664,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "spreadP",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 13666,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "groupIndex",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 13668,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feeIndex",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}